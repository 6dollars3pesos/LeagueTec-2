<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aimtec.SDK</name>
    </assembly>
    <members>
        <member name="T:Aimtec.SDK.Bootstrap">
            <summary>
                Class Bootstrap.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Bootstrap.alreadyLoaded">
            <summary>
                Gets if the library has already been loaded and initalized
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Bootstrap.Logger">
            <summary>
                Gets the logger.
            </summary>
            <value>The logger.</value>
        </member>
        <member name="M:Aimtec.SDK.Bootstrap.Load">
            <summary>
                Initalizes the library.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Bootstrap.LogUnhandledExceptions">
            <summary>
                Adds an event handler for unhandles exceptions and logs them accordingly.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Bootstrap.SetupLogging">
            <summary>
                Configures NLog to properly display and record log messages.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.AOrbwalker">
            <summary>
                AOrbwalker class
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.Player">
            <summary>
                The Player
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.AttackResets">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.AOrbwalker.NoCancelChamps">
            <summary>
                Names of champions which cannot cancel their auto attacks
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.Combo">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.LaneClear">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.LastHit">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.Mixed">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.OrbwalkerModes">
            <summary>
                List of the Orbwalker Modes that are currently active for this instance
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.Logger">
            <summary>
                Gets the logger instance for this class
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.AOrbwalker.Config">
            <summary>
                The Orbwalker Menu
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.WindUpTime">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.IsWindingUp">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.AttackingEnabled">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.MovingEnabled">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.Mode">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.AOrbwalker.ModeName">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.AOrbwalker.PreAttack">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.AOrbwalker.PostAttack">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.AOrbwalker.OnNonKillableMinion">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.AOrbwalker.PreMove">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.Attach(Aimtec.SDK.Menu.IMenu)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.CanAttack">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.CanMove">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.Dispose">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.ForceTarget(Aimtec.AttackableUnit)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.Orbwalk">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.ResetAutoAttackTimer">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.IsReset(System.String)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.GetActiveMode">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.AddMode(Aimtec.SDK.Orbwalking.OrbwalkerMode)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.DuplicateMode(Aimtec.SDK.Orbwalking.OrbwalkerMode,System.String,Aimtec.SDK.Util.KeyCode)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.DuplicateMode(Aimtec.SDK.Orbwalking.OrbwalkerMode,System.String,Aimtec.SDK.Menu.Config.GlobalKey)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.FirePreAttack(Aimtec.AttackableUnit)">
            <summary>
                Fires the Pre Attack Event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.FirePostAttack(Aimtec.AttackableUnit)">
            <summary>
                Fires the Post Attack Event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.FireNonKillableMinion(Aimtec.AttackableUnit)">
            <summary>
                Fires the OnNonKillableMinion event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.FirePreMove(Aimtec.Vector3)">
            <summary>
                Fires the Pre Move Event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.Move(Aimtec.Vector3)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.Attack(Aimtec.AttackableUnit)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.GetTarget(Aimtec.SDK.Orbwalking.OrbwalkerMode)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.AOrbwalker.GetTarget">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.IOrbwalker">
            <summary>
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.AddMode(Aimtec.SDK.Orbwalking.OrbwalkerMode)">
            <summary>
                Adds a new mode to this Orbwalker Instance
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.DuplicateMode(Aimtec.SDK.Orbwalking.OrbwalkerMode,System.String,Aimtec.SDK.Util.KeyCode)">
            <summary>
                Duplicates an existing Orbwalker mode to a new name and key, useful if your assembly needs additional modes
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.DuplicateMode(Aimtec.SDK.Orbwalking.OrbwalkerMode,System.String,Aimtec.SDK.Menu.Config.GlobalKey)">
            <summary>
                Duplicates an existing Orbwalker mode to a new name and key, useful if your assembly needs additional modes
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.Combo">
            <summary>
                The Combo Orbwalker Mode
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.LaneClear">
            <summary>
                The Laneclear Orbwalker Mode
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.LastHit">
            <summary>
                The Laneclear Orbwalker Mode
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.Mixed">
            <summary>
                The Mixed Orbwalker Mode
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.GetActiveMode">
            <summary>
                Gets the current active OrbwalkerMode
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.Move(Aimtec.Vector3)">
            <summary>
                Processes a movement command through the Orbwalker, firing events, etc.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.Attack(Aimtec.AttackableUnit)">
            <summary>
                Processes a movement command through the Orbwalker, firing events, etc.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.GetTarget(Aimtec.SDK.Orbwalking.OrbwalkerMode)">
            <summary>
                Gets the target for this orbwalker mode
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.GetTarget">
            <summary>
                Gets the target.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.AttackResets">
            <summary>
                Gets the target for this orbwalker mode
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.IsWindingUp">
            <summary>
                Gets if the orbwalker is in the middle of casting an auto attack
                If true, then it is not safe to cast any commands. If false, then commands can be issued without interrupting the attack.
            </summary>
            /// <value>
                <c>true</c> if the orbwalker is in the process of auto attacking, otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.ModeName">
            <summary>
                Returns the current Orbwalker Mode Name as a string
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.Orbwalk">
            <summary>
                The Orbwalking logic
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.WindUpTime">
            <summary>
                Gets the wind up time.
            </summary>
            <value>
                The wind up time.
            </value>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.CanMove">
            <summary>
                Gets the if the player can move.
            </summary>
            <value>
                If the player can move.
            </value>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.CanAttack">
            <summary>
                Gets the if the player can attack.
            </summary>
            <value>
                If the player can attack.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.AttackingEnabled">
            <summary>
                Gets or sets a value indicating whether the orbwalker should disable attacking.
            </summary>
            <value>
                <c>true</c> if the orbwalker should disable attacking; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.MovingEnabled">
            <summary>
                Gets or sets a value indicating whether the orbwalker should disable moving.
            </summary>
            <value>
                <c>true</c> if the orbwalker should disable moving; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.IOrbwalker.Mode">
            <summary>
                Gets or sets the mode.
            </summary>
            <value>
                The mode.
            </value>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.ResetAutoAttackTimer">
            <summary>
                Resets the automatic attack timer.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.Attach(Aimtec.SDK.Menu.IMenu)">
            <summary>
                Adds to menu.
            </summary>
            <param name="menu">The menu.</param>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.ForceTarget(Aimtec.AttackableUnit)">
            <summary>
                Forces the target.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.IOrbwalker.IsReset(System.String)">
            <summary>
                Returns whether this the missile name is an auto attack reset
            </summary>
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.IOrbwalker.PreAttack">
            <summary>
                Occurs when the orbwalking is about to launch an attack.
            </summary>
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.IOrbwalker.OnNonKillableMinion">
            <summary>
                Occurs when there is a non killable minion
            </summary>
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.IOrbwalker.PostAttack">
            <summary>
                Occurs when after an attack has been launched and acknowledged by the server.
            </summary>
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.IOrbwalker.PreMove">
            <summary>
                Occurs before a movement order is issued.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.OrbwalkingEventArgs">
            <summary>
                A base class used by the Orbwalker for events.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkingEventArgs.Target">
            <summary>
                Gets or sets the target.
            </summary>
            <value>
                The target.
            </value>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.PreAttackEventArgs">
            <summary>
                The event arguements for the <see cref="E:Aimtec.SDK.Orbwalking.IOrbwalker.PreAttack" /> event.
            </summary>
            <seealso cref="T:Aimtec.SDK.Orbwalking.OrbwalkingEventArgs" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.PreAttackEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Orbwalking.PreAttackEventArgs"/> is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.PostAttackEventArgs">
            <summary>
                The event arguements for the <see cref="E:Aimtec.SDK.Orbwalking.IOrbwalker.PostAttack" /> event.
            </summary>
            <seealso cref="T:Aimtec.SDK.Orbwalking.OrbwalkingEventArgs" />
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.NonKillableMinionEventArgs">
            <summary>
                The event arguements for the <see cref="E:Aimtec.SDK.Orbwalking.AOrbwalker.OnNonKillableMinion" /> event.
            </summary>
            <seealso cref="T:Aimtec.SDK.Orbwalking.OrbwalkingEventArgs" />
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.PreMoveEventArgs">
            <summary>
                The event arguements for the <see cref="E:Aimtec.SDK.Orbwalking.IOrbwalker.PreMove" /> event.
            </summary>
            <seealso cref="T:Aimtec.SDK.Orbwalking.OrbwalkingEventArgs" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.PreMoveEventArgs.MovePosition">
            <summary>
            Gets or sets the move position.
            </summary>
            <value>The move position.</value>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.PreMoveEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Orbwalking.PreMoveEventArgs"/> is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.OrbwalkerMode">
            <summary>
            Class OrbwalkerMode
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.OrbwalkerMode.OrbwalkModeDelegate">
            <summary>
            The delegate for this Mode's logic
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.OrbwalkerMode.TargetDelegate">
            <summary>
            The delegate for this Mode's target selection logic
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkerMode.ModeBehaviour">
            <summary>
            This Orbwalker Mode's logic
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkerMode.GetTargetImplementation">
            <summary>
            The target selection logic for this mode
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkerMode.ParentInstance">
            <summary>
            The Orbwalker Instance this mode belongs to
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.Name">
            <summary>
            The name of this mode
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.MenuItem">
            <summary>
            The MenuKeyBind item associated with this mode 
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.Active">
            <summary>
            Whether this mode is currently active
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.BaseOrbwalkingEnabled">
            <summary>
            Whether this mode should execute the base Orbwalking Logic
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.UsingGlobalKey">
            <summary>
            Whether this mode is using a Global Key instead of its own KeyBind
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.AttackingEnabled">
            <summary>
            Whether attacking is currently allowed
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkerMode.MovingEnabled">
            <summary>
            Whether moving is currently enabled
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.OrbwalkerMode.#ctor(System.String,Aimtec.SDK.Menu.Config.GlobalKey,Aimtec.SDK.Orbwalking.OrbwalkerMode.TargetDelegate,Aimtec.SDK.Orbwalking.OrbwalkerMode.OrbwalkModeDelegate)">
            <summary>
                Creates a new instance of an OrbwalkerMode using a Global Key
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.OrbwalkerMode.#ctor(System.String,Aimtec.SDK.Util.KeyCode,Aimtec.SDK.Orbwalking.OrbwalkerMode.TargetDelegate,Aimtec.SDK.Orbwalking.OrbwalkerMode.OrbwalkModeDelegate)">
            <summary>
                Creates a new instance of an OrbwalkerMode using a new Keybind
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.OrbwalkerMode.Execute">
            <summary>
                Executes the logic for this Orbwalking Mode
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Orbwalking.Orbwalker">
            <summary>
                Orbwalker class
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.#ctor(Aimtec.SDK.Orbwalking.IOrbwalker)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Orbwalking.Orbwalker" /> class.
            </summary>
            <param name="impl">The implementation.</param>
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Orbwalking.Orbwalker" /> class.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.Implementation">
            <summary>
                Gets or sets the implementation of the orbwalker.
            </summary>
            <value>
                The implementation of the orbwalker.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.AttackResets">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.Orbwalker.PreAttack">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.Orbwalker.PostAttack">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.Orbwalker.OnNonKillableMinion">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="E:Aimtec.SDK.Orbwalking.Orbwalker.PreMove">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.WindUpTime">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.IsWindingUp">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.CanMove">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.CanAttack">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.AttackingEnabled">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.MovingEnabled">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.Mode">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.ModeName">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.Combo">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.LaneClear">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.LastHit">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.Orbwalker.Mixed">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.GetTarget(Aimtec.SDK.Orbwalking.OrbwalkerMode)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.ResetAutoAttackTimer">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.Attach(Aimtec.SDK.Menu.IMenu)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.ForceTarget(Aimtec.AttackableUnit)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.Orbwalk">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.AddMode(Aimtec.SDK.Orbwalking.OrbwalkerMode)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.DuplicateMode(Aimtec.SDK.Orbwalking.OrbwalkerMode,System.String,Aimtec.SDK.Util.KeyCode)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.DuplicateMode(Aimtec.SDK.Orbwalking.OrbwalkerMode,System.String,Aimtec.SDK.Menu.Config.GlobalKey)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.GetTarget">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.Move(Aimtec.Vector3)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.Attack(Aimtec.AttackableUnit)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.GetActiveMode">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.IsReset(System.String)">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="M:Aimtec.SDK.Orbwalking.Orbwalker.Dispose">
            <inheritdoc cref="T:Aimtec.SDK.Orbwalking.IOrbwalker" />
        </member>
        <member name="P:Aimtec.SDK.Orbwalking.OrbwalkingImpl.ForcedTarget">
            <summary>
                Gets or sets the Forced Target 
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingImpl.LastAttackCommandSentTime">
            <summary>
                The time the last attack command was sent (determined locally)
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.None">
            <summary>
                Orbwalker does nothing.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.Combo">
            <summary>
                Orbwalker will attack the target.
            </summary>
            
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.Mixed">
            <summary>
                Orbwalker will auto attack the target and last hit minions.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.Laneclear">
            <summary>
                Orbwalker will clear lane minions as fast as possible.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.Lasthit">
            <summary>
                Orbwalker will only last hit minions.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.Freeze">
            <summary>
                Orbwalker will last hit minions as late as possible.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Orbwalking.OrbwalkingMode.Custom">
            <summary>
                Orbwalker will be in a custom mode.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Util.Cache.GameObjectEqualityComparer">
            <summary>
                Class GameObjectEqualityComparer.
            </summary>
            <seealso cref="T:Aimtec.GameObject" />
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjectEqualityComparer.Equals(Aimtec.GameObject,Aimtec.GameObject)">
            <summary>
                Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <typeparamref name="T" /> to compare.</param>
            <param name="y">The second object of type <typeparamref name="T" />paramref name="T" /> to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjectEqualityComparer.GetHashCode(Aimtec.GameObject)">
            <summary>
                Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Aimtec.SDK.Util.Cache.GameObjects">
            <summary>
                Class GameObjects.
            </summary>
            <remarks>Members in the list may be invalid. Always check the <see cref="P:Aimtec.GameObject.IsValid" /> property before use.</remarks>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.allGameObjects">
            <summary>
                All game objects
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.allyHeroes">
            <summary>
                The ally heroes
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.allyMinions">
            <summary>
                The ally minions
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.enemyHeroes">
            <summary>
                The enemy heroes
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.enemyMinionsI">
            <summary>
                The enemy minions
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.HeroesI">
            <summary>
                The heroes
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.Cache.GameObjects.minionsI">
            <summary>
                The minions
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.AllGameObjects">
            <summary>
            Gets all game objects.
            </summary>
            <value>All game objects.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.AllyHeroes">
            <summary>
            Gets the ally heroes.
            </summary>
            <value>The ally heroes.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.AllyMinions">
            <summary>
            Gets the ally minions.
            </summary>
            <value>The ally minions.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.EnemyHeroes">
            <summary>
            Gets the enemy heroes.
            </summary>
            <value>The enemy heroes.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.EnemyMinions">
            <summary>
            Gets the enemy minions.
            </summary>
            <value>The enemy minions.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.Heroes">
            <summary>
            Gets the heroes.
            </summary>
            <value>The heroes.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Cache.GameObjects.Minions">
            <summary>
            Gets the minions.
            </summary>
            <value>The minions.</value>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Aimtec.SDK.Util.Cache.GameObjects"/> class.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.Get``1">
            <summary>
                Gets all GameObjects of type <typeparamref name="T" />
            </summary>
            <typeparam name="T"></typeparam>
            <returns>IEnumerable{T}</returns>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.Add``1(System.Collections.Generic.HashSet{``0}@,System.Collections.Generic.HashSet{``0}@,System.Collections.Generic.HashSet{``0}@,Aimtec.GameObject)">
            <summary>
                Adds the <paramref name="obj" /> to the corresponding lists if it is of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="generalList">The general list.</param>
            <param name="allyList">The ally list.</param>
            <param name="enemyList">The enemy list.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.CreateHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Creates the hash set based on the collection using <see cref="T:Aimtec.SDK.Util.Cache.GameObjectEqualityComparer" /> as the comparer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <returns>HashSet&lt;T&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.GameObjectCreated(Aimtec.GameObject)">
            <summary>
                Called when a <see cref="T:Aimtec.GameObject" /> is created.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.GameObjectDestroyed(Aimtec.GameObject)">
            <summary>
                Called when a <see cref="T:Aimtec.GameObject" /> is destroyed.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Aimtec.SDK.Util.Cache.GameObjects.Remove``1(System.Collections.Generic.HashSet{``0}@,System.Collections.Generic.HashSet{``0}@,System.Collections.Generic.HashSet{``0}@,Aimtec.GameObject)">
            <summary>
                Adds the <paramref name="obj" /> to the corresponding lists if it is of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="generalList">The general list.</param>
            <param name="allyList">The ally list.</param>
            <param name="enemyList">The enemy list.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="T:Aimtec.SDK.Util.DelayAction">
            <summary>
                Runs actions at a later time.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Util.DelayAction.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Aimtec.SDK.Util.DelayAction" /> class.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Util.DelayAction.TaskQueue">
            <summary>
                Gets or sets the task queue.
            </summary>
            <value>The task queue.</value>
        </member>
        <member name="M:Aimtec.SDK.Util.DelayAction.Queue(System.Int32,System.Action)">
            <summary>
                Queues the action to be run after a specified time.
            </summary>
            <param name="milliseconds">The time time to delay in milliseconds.</param>
            <param name="action">The action.</param>
            <returns>A <see cref="T:System.Threading.CancellationToken" /> that can be used to cancel the action.</returns>
        </member>
        <member name="M:Aimtec.SDK.Util.DelayAction.Queue(System.Int32,System.Action,System.Threading.CancellationToken)">
            <summary>
                Queues the specified action after a specified delay.
            </summary>
            <param name="milliseconds">The milliseconds.</param>
            <param name="action">The action.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:Aimtec.SDK.Util.DelayAction.SortList">
            <summary>
                Sorts the list.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Util.DelayAction.UpdateDelayedActions">
            <summary>
                Updates the delayed actions.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Util.KeyboardEvents">
            <summary>
                The keyboard events.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyboardEvents.KEYBDEVENTF_KEYDOWN">
            <summary>
                The key down event.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyboardEvents.KEYBDEVENTF_KEYUP">
            <summary>
                The key up event.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyboardEvents.KEYBDEVENTF_SHIFTVIRTUAL">
            <summary>
                The shift virtual event.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyboardEvents.KEYBDEVENTF_SHIFTSCANCODE">
            <summary>
                The shift scan code event.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Util.KeyCode">
            <summary>
                Specifies key codes and modifiers.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.KeyCode">
            <summary>
                The bitmask to extract a key code from a key value.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Modifiers">
            <summary>
                The bitmask to extract modifiers from a key value.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.None">
            <summary>
                No key pressed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LButton">
            <summary>
                The left mouse button.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.RButton">
            <summary>
                The right mouse button.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Cancel">
            <summary>
                The CANCEL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.MButton">
            <summary>
                The middle mouse button (three-button mouse).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.XButton1">
            <summary>
                The first x mouse button (five-button mouse).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.XButton2">
            <summary>
                The second x mouse button (five-button mouse).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Back">
            <summary>
                The BACKSPACE key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Tab">
            <summary>
                The TAB key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LineFeed">
            <summary>
                The LINEFEED key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Clear">
            <summary>
                The CLEAR key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Return">
            <summary>
                The RETURN key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Enter">
            <summary>
                The ENTER key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.ShiftKey">
            <summary>
                The SHIFT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.ControlKey">
            <summary>
                The CTRL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Menu">
            <summary>
                The ALT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Pause">
            <summary>
                The PAUSE key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Capital">
            <summary>
                The CAPS LOCK key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.CapsLock">
            <summary>
                The CAPS LOCK key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.KanaMode">
            <summary>
                The IME Kana mode key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.HanguelMode">
            <summary>
                The IME Hanguel mode key. (maintained for compatibility; use HangulMode)
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.HangulMode">
            <summary>
                The IME Hangul mode key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.JunjaMode">
            <summary>
                The IME Junja mode key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.FinalMode">
            <summary>
                The IME final mode key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.HanjaMode">
            <summary>
                The IME Hanja mode key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.KanjiMode">
            <summary>
                The IME Kanji mode key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Escape">
            <summary>
                The ESC key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.IMEConvert">
            <summary>
                The IME convert key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.IMENonconvert">
            <summary>
                The IME nonconvert key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.IMEAccept">
            <summary>
                The IME accept key, replaces IMEAceept.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.IMEAceept">
            <summary>
                The IME accept key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.IMEModeChange">
            <summary>
                The IME mode change key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Space">
            <summary>
                The SPACEBAR key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Prior">
            <summary>
                The PAGE UP key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.PageUp">
            <summary>
                The PAGE UP key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Next">
            <summary>
                The PAGE DOWN key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.PageDown">
            <summary>
                The PAGE DOWN key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.End">
            <summary>
                The END key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Home">
            <summary>
                The HOME key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Left">
            <summary>
                The LEFT ARROW key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Up">
            <summary>
                The UP ARROW key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Right">
            <summary>
                The RIGHT ARROW key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Down">
            <summary>
                The DOWN ARROW key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Select">
            <summary>
                The SELECT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Print">
            <summary>
                The PRINT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Execute">
            <summary>
                The EXECUTE key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Snapshot">
            <summary>
                The PRINT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.PrintScreen">
            <summary>
                The PRINT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Insert">
            <summary>
                The INS key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Delete">
            <summary>
                The DEL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Help">
            <summary>
                The HELP key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D0">
            <summary>
                The 0 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D1">
            <summary>
                The 1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D2">
            <summary>
                The 2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D3">
            <summary>
                The 3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D4">
            <summary>
                The 4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D5">
            <summary>
                The 5 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D6">
            <summary>
                The 6 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D7">
            <summary>
                The 7 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D8">
            <summary>
                The 8 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D9">
            <summary>
                The 9 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.A">
            <summary>
                The A key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.B">
            <summary>
                The B key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.C">
            <summary>
                The C key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.D">
            <summary>
                The D key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.E">
            <summary>
                The E key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F">
            <summary>
                The F key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.G">
            <summary>
                The G key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.H">
            <summary>
                The H key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.I">
            <summary>
                The I key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.J">
            <summary>
                The J key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.K">
            <summary>
                The K key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.L">
            <summary>
                The L key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.M">
            <summary>
                The M key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.N">
            <summary>
                The N key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.O">
            <summary>
                The O key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.P">
            <summary>
                The P key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Q">
            <summary>
                The Q key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.R">
            <summary>
                The R key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.S">
            <summary>
                The S key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.T">
            <summary>
                The T key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.U">
            <summary>
                The U key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.V">
            <summary>
                The V key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.W">
            <summary>
                The W key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.X">
            <summary>
                The X key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Y">
            <summary>
                The Y key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Z">
            <summary>
                The Z key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LWin">
            <summary>
                The left Windows logo key (Microsoft Natural Keyboard).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.RWin">
            <summary>
                The right Windows logo key (Microsoft Natural Keyboard).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Apps">
            <summary>
                The application key (Microsoft Natural Keyboard).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Sleep">
            <summary>
                The computer sleep key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad0">
            <summary>
                The 0 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad1">
            <summary>
                The 1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad2">
            <summary>
                The 2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad3">
            <summary>
                The 3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad4">
            <summary>
                The 4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad5">
            <summary>
                The 5 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad6">
            <summary>
                The 6 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad7">
            <summary>
                The 7 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad8">
            <summary>
                The 8 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumPad9">
            <summary>
                The 9 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Multiply">
            <summary>
                The multiply key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Add">
            <summary>
                The add key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Separator">
            <summary>
                The separator key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Subtract">
            <summary>
                The subtract key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Decimal">
            <summary>
                The decimal key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Divide">
            <summary>
                The divide key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F1">
            <summary>
                The F1 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F2">
            <summary>
                The F2 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F3">
            <summary>
                The F3 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F4">
            <summary>
                The F4 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F5">
            <summary>
                The F5 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F6">
            <summary>
                The F6 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F7">
            <summary>
                The F7 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F8">
            <summary>
                The F8 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F9">
            <summary>
                The F9 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F10">
            <summary>
                The F10 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F11">
            <summary>
                The F11 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F12">
            <summary>
                The F12 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F13">
            <summary>
                The F13 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F14">
            <summary>
                The F14 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F15">
            <summary>
                The F15 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F16">
            <summary>
                The F16 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F17">
            <summary>
                The F17 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F18">
            <summary>
                The F18 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F19">
            <summary>
                The F19 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F20">
            <summary>
                The F20 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F21">
            <summary>
                The F21 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F22">
            <summary>
                The F22 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F23">
            <summary>
                The F23 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.F24">
            <summary>
                The F24 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NumLock">
            <summary>
                The NUM LOCK key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Scroll">
            <summary>
                The SCROLL LOCK key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LShiftKey">
            <summary>
                The left SHIFT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.RShiftKey">
            <summary>
                The right SHIFT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LControlKey">
            <summary>
                The left CTRL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.RControlKey">
            <summary>
                The right CTRL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LMenu">
            <summary>
                The left ALT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.RMenu">
            <summary>
                The right ALT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserBack">
            <summary>
                The browser back key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserForward">
            <summary>
                The browser forward key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserRefresh">
            <summary>
                The browser refresh key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserStop">
            <summary>
                The browser stop key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserSearch">
            <summary>
                The browser search key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserFavorites">
            <summary>
                The browser favorites key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.BrowserHome">
            <summary>
                The browser home key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.VolumeMute">
            <summary>
                The volume mute key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.VolumeDown">
            <summary>
                The volume down key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.VolumeUp">
            <summary>
                The volume up key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.MediaNextTrack">
            <summary>
                The media next track key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.MediaPreviousTrack">
            <summary>
                The media previous track key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.MediaStop">
            <summary>
                The media Stop key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.MediaPlayPause">
            <summary>
                The media play pause key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LaunchMail">
            <summary>
                The launch mail key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.SelectMedia">
            <summary>
                The select media key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LaunchApplication1">
            <summary>
                The start application one key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.LaunchApplication2">
            <summary>
                The start application two key (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemSemicolon">
            <summary>
                The OEM Semicolon key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem1">
            <summary>
                The OEM 1 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oemplus">
            <summary>
                The OEM plus key on any country/region keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oemcomma">
            <summary>
                The OEM comma key on any country/region keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemMinus">
            <summary>
                The OEM minus key on any country/region keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemPeriod">
            <summary>
                The OEM period key on any country/region keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemQuestion">
            <summary>
                The OEM question mark key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem2">
            <summary>
                The OEM 2 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oemtilde">
            <summary>
                The OEM tilde key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem3">
            <summary>
                The OEM 3 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemOpenBrackets">
            <summary>
                The OEM open bracket key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem4">
            <summary>
                The OEM 4 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemPipe">
            <summary>
                The OEM pipe key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem5">
            <summary>
                The OEM 5 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemCloseBrackets">
            <summary>
                The OEM close bracket key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem6">
            <summary>
                The OEM 6 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemQuotes">
            <summary>
                The OEM singled/double quote key on a US standard keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem7">
            <summary>
                The OEM 7 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem8">
            <summary>
                The OEM 8 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemBackslash">
            <summary>
                The OEM angle bracket or backslash key on the RT 102 key keyboard (Windows 2000 or later).
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Oem102">
            <summary>
                The OEM 102 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.ProcessKey">
            <summary>
                The PROCESS KEY key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Packet">
            <summary>
                Used to pass Unicode characters as if they were keystrokes. The Packet key value is the low word of a 32-bit
                virtual-key value used for non-keyboard input methods.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Attn">
            <summary>
                The ATTN key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Crsel">
            <summary>
                The CRSEL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Exsel">
            <summary>
                The EXSEL key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.EraseEof">
            <summary>
                The ERASE EOF key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Play">
            <summary>
                The PLAY key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Zoom">
            <summary>
                The ZOOM key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.NoName">
            <summary>
                A constant reserved for future use.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Pa1">
            <summary>
                The PA1 key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.OemClear">
            <summary>
                The CLEAR key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Shift">
            <summary>
                The SHIFT modifier key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Control">
            <summary>
                The CTRL modifier key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.KeyCode.Alt">
            <summary>
                The ALT modifier key.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Util.Geometry">
            <summary>
            Class Geometry.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Util.Geometry.VectorMovementCollisionResult">
            <summary>
            Struct VectorMovementCollisionResult
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Util.Geometry.VectorMovementCollisionResult.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>The time.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.Geometry.VectorMovementCollisionResult.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:Aimtec.SDK.Util.Geometry.VectorMovementCollision(Aimtec.Vector2,Aimtec.Vector2,System.Single,Aimtec.Vector2,System.Single,System.Single)">
            <summary>
            Calculates the collision point between two vectors with different velocities after a fixed delay.
            </summary>
            <param name="startPoint1">The start point.</param>
            <param name="endPoint1">The ending point</param>
            <param name="v1">The velocity of the first vector.</param>
            <param name="startPoint2">The observerer standing point.</param>
            <param name="v2">The velocity of the second vector.</param>
            <param name="delay">The delay.</param>
            <returns>VectorMovementCollisionResult.</returns>
        </member>
        <member name="T:Aimtec.SDK.Util.Mec">
            <summary>
                Class MEC.
            </summary>
            <remarks>
                Best Case  O(1) - 3 points or less
                Worst Case O(n) - Greater than 3 points
            </remarks>
        </member>
        <member name="M:Aimtec.SDK.Util.Mec.FindMinimumEnclosingCircle(Aimtec.Vector2[])">
            <summary>
                Finds the minimum enclosing circle.
            </summary>
            <param name="points">The points.</param>
            <returns>MinimumEnclosingCircleResult.</returns>
            <exception cref="T:System.ArgumentNullException">points</exception>
            <exception cref="T:System.ArgumentException">Cannot find the MEC of an empty array.</exception>
        </member>
        <member name="M:Aimtec.SDK.Util.Mec.FindMinimumEnclosingCircle(System.Collections.Generic.IEnumerable{Aimtec.Vector2})">
            <summary>
                Finds the minimum enclosing circle.
            </summary>
            <param name="points">The points.</param>
            <returns>MinimumEnclosingCircleResult.</returns>
        </member>
        <member name="T:Aimtec.SDK.Util.MinimumEnclosingCircleResult">
            <summary>
                Struct MinimumEnclosingCircleResult
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Util.MinimumEnclosingCircleResult.#ctor(Aimtec.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Util.MinimumEnclosingCircleResult" /> struct.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="P:Aimtec.SDK.Util.MinimumEnclosingCircleResult.Center">
            <summary>
                Gets or sets the center.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:Aimtec.SDK.Util.MinimumEnclosingCircleResult.Radius">
            <summary>
                Gets or sets the radius.
            </summary>
            <value>The radius.</value>
        </member>
        <member name="T:Aimtec.SDK.Util.WindowsMessages">
            <summary>
                Windows Messages
                Defined in <![CDATA[winuser.h]]> from Windows SDK v6.1
                Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NULL">
            <summary>
                The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message
                that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CREATE">
            <summary>
                The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx
                or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window
                receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DESTROY">
            <summary>
                The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window
                being destroyed after the window is removed from the screen.
                This message is sent first to the window being destroyed and then to the child windows (if any) as they are
                destroyed. During the processing of the message, it can be assumed that all child windows still exist.
                ///
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOVE">
            <summary>
                The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SIZE">
            <summary>
                The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ACTIVATE">
            <summary>
                The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows
                use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window
                being deactivated, then to the window procedure of the top-level window being activated. If the windows use
                different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETFOCUS">
            <summary>
                The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_KILLFOCUS">
            <summary>
                The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ENABLE">
            <summary>
                The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window
                whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the
                enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETREDRAW">
            <summary>
                An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to
                prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETTEXT">
            <summary>
                An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETTEXT">
            <summary>
                An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by
                the caller.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETTEXTLENGTH">
            <summary>
                An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with
                a window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PAINT">
            <summary>
                The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an
                application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the
                DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage
                function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CLOSE">
            <summary>
                The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUERYENDSESSION">
            <summary>
                The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of
                the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending
                WM_QUERYENDSESSION messages as soon as one application returns zero.
                After processing this message, the system sends the WM_ENDSESSION message with the <c>wParam</c> parameter set to
                the
                results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUERYOPEN">
            <summary>
                The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size
                and position.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ENDSESSION">
            <summary>
                The WM_ENDSESSION message is sent to an application after the system processes the results of the
                WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUIT">
            <summary>
                The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the
                PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ERASEBKGND">
            <summary>
                The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is
                resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSCOLORCHANGE">
            <summary>
                This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SHOWWINDOW">
            <summary>
                The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_WININICHANGE">
            <summary>
                An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI
                file. The SystemParametersInfo function sends this message after an application uses the function to change a
                setting in WIN.INI.
                Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system.
                Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETTINGCHANGE">
            <summary>
                An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI
                file. The SystemParametersInfo function sends this message after an application uses the function to change a
                setting in WIN.INI.
                Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system.
                Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DEVMODECHANGE">
            <summary>
                The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ACTIVATEAPP">
            <summary>
                The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is
                about to be activated. The message is sent to the application whose window is being activated and to the
                application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_FONTCHANGE">
            <summary>
                An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of
                font resources.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_TIMECHANGE">
            <summary>
                A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CANCELMODE">
            <summary>
                The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends
                this message to the active window when a dialog box or message box is displayed. Certain functions also send this
                message explicitly to the specified window regardless of whether it is the active window. For example, the
                EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETCURSOR">
            <summary>
                The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input
                is not captured.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSEACTIVATE">
            <summary>
                The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button.
                The parent window receives this message only if the child window passes it to the <c>DefWindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CHILDACTIVATE">
            <summary>
                The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the
                window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUEUESYNC">
            <summary>
                The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages
                from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETMINMAXINFO">
            <summary>
                The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An
                application can use this message to override the window's default maximized size and position, or its default
                minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PAINTICON">
            <summary>
                Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted.
                This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the
                Remarks.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ICONERASEBKGND">
            <summary>
                Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the
                icon must be filled before painting the icon. A window receives this message only if a class icon is defined for
                the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NEXTDLGCTL">
            <summary>
                The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the
                dialog box.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SPOOLERSTATUS">
            <summary>
                The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print
                Manager queue.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DRAWITEM">
            <summary>
                The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a
                visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MEASUREITEM">
            <summary>
                The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item
                when the control or menu is created.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DELETEITEM">
            <summary>
                Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed
                by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a
                WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or
                combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_VKEYTOITEM">
            <summary>
                Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CHARTOITEM">
            <summary>
                Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETFONT">
            <summary>
                An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETFONT">
            <summary>
                An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently
                drawing its text.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETHOTKEY">
            <summary>
                An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user
                presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETHOTKEY">
            <summary>
                An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUERYDRAGICON">
            <summary>
                The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user
                but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The
                system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_COMPAREITEM">
            <summary>
                The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of
                an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to
                the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETOBJECT">
            <summary>
                Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a
                server application.
                Applications never send this message directly. It is sent only by Active Accessibility in response to calls to
                AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications
                handle this message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_COMPACTING">
            <summary>
                The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system
                time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_COMMNOTIFY">
            <summary>
                WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_WINDOWPOSCHANGING">
            <summary>
                The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to
                change as a result of a call to the <c>SetWindowPos</c> function or another window-management function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_WINDOWPOSCHANGED">
            <summary>
                The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a
                result of a call to the <c>SetWindowPos</c> function or another window-management function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_POWER">
            <summary>
                Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended
                mode.
                Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_COPYDATA">
            <summary>
                An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CANCELJOURNAL">
            <summary>
                The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling
                activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NOTIFY">
            <summary>
                Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INPUTLANGCHANGEREQUEST">
            <summary>
                The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input
                language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the
                system taskbar. An application can accept the change by passing the message to the <c>DefWindowProc</c> function or
                reject
                the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INPUTLANGCHANGE">
            <summary>
                The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has
                been changed. You should make any application-specific settings and pass the message to the <c>DefWindowProc</c>
                function,
                which passes the message to all first-level child windows. These child windows can pass the message to
                <c>DefWindowProc</c> to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_TCARD">
            <summary>
                Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the
                application when the user clicks an author-able button. An application initiates a training card by specifying the
                HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HELP">
            <summary>
                Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window
                associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has
                the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_USERCHANGED">
            <summary>
                The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or
                off, the system updates the user-specific settings. The system sends this message immediately after updating the
                settings.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NOTIFYFORMAT">
            <summary>
                Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT
                messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CONTEXTMENU">
            <summary>
                The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the
                window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_STYLECHANGING">
            <summary>
                The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of
                the window's styles.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_STYLECHANGED">
            <summary>
                The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the
                window's styles
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DISPLAYCHANGE">
            <summary>
                The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETICON">
            <summary>
                The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a
                window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SETICON">
            <summary>
                An application sends the WM_SETICON message to associate a new large or small icon with a window. The system
                displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCCREATE">
            <summary>
                The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCDESTROY">
            <summary>
                The WM_NCDESTROY message informs a window that its non-client area is being destroyed. The DestroyWindow function
                sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the
                allocated memory object associated with the window.
                The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent
                before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCCALCSIZE">
            <summary>
                The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By
                processing this message, an application can control the content of the window's client area when the size or
                position of the window changes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCHITTEST">
            <summary>
                The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released.
                If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent
                to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCPAINT">
            <summary>
                The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCACTIVATE">
            <summary>
                The WM_NCACTIVATE message is sent to a window when its non-client area needs to be changed to indicate an active or
                inactive state.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETDLGCODE">
            <summary>
                The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles
                all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation
                keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types
                of input it wants to process itself.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYNCPAINT">
            <summary>
                The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCMOUSEMOVE">
            <summary>
                The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the non-client area of the window.
                This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is
                not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCLBUTTONDOWN">
            <summary>
                The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCLBUTTONUP">
            <summary>
                The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCLBUTTONDBLCLK">
            <summary>
                The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is
                within the non-client area of a window. This message is posted to the window that contains the cursor. If a window
                has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCRBUTTONDOWN">
            <summary>
                The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCRBUTTONUP">
            <summary>
                The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCRBUTTONDBLCLK">
            <summary>
                The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is
                within the non-client area of a window. This message is posted to the window that contains the cursor. If a window
                has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCMBUTTONDOWN">
            <summary>
                The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCMBUTTONUP">
            <summary>
                The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCMBUTTONDBLCLK">
            <summary>
                The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is
                within the non-client area of a window. This message is posted to the window that contains the cursor. If a window
                has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCXBUTTONDOWN">
            <summary>
                The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in
                the non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCXBUTTONUP">
            <summary>
                The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the
                non-client area of a window. This message is posted to the window that contains the cursor. If a window has
                captured
                the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCXBUTTONDBLCLK">
            <summary>
                The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor
                is in the non-client area of a window. This message is posted to the window that contains the cursor. If a window
                has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INPUT_DEVICE_CHANGE">
            <summary>
                The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives
                this message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INPUT">
            <summary>
                The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_KEYFIRST">
            <summary>
                This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_KEYDOWN">
            <summary>
                The WM_KEYDOWN message is posted to the window with the keyboard focus when a non-system key is pressed. A
                non-system
                key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_KEYUP">
            <summary>
                The WM_KEYUP message is posted to the window with the keyboard focus when a non-system key is released. A
                non-system
                key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has
                the keyboard focus.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CHAR">
            <summary>
                The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the
                TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DEADCHAR">
            <summary>
                The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by
                the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key
                that generates a character, such as the umlaut (double-dot), that is combined with another character to form a
                composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut
                character, and then typing the O key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSKEYDOWN">
            <summary>
                The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which
                activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window
                currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window
                that receives the message can distinguish between these two contexts by checking the context code in the
                <c>lParam</c> parameter.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSKEYUP">
            <summary>
                The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was
                pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this
                case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish
                between these two contexts by checking the context code in the <c>lParam</c> parameter.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSCHAR">
            <summary>
                The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated
                by the TranslateMessage function. It specifies the character code of a system character key — that is, a character
                key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSDEADCHAR">
            <summary>
                The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated
                by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a
                dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_UNICHAR">
            <summary>
                The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by
                the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
                The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas
                WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle
                Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_KEYLAST">
            <summary>
                This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_STARTCOMPOSITION">
            <summary>
                Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this
                message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_ENDCOMPOSITION">
            <summary>
                Sent to an application when the IME ends composition. A window receives this message through its <c>WindowProc</c>
                function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_COMPOSITION">
            <summary>
                Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this
                message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_KEYLAST">
            <summary>
                Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this
                message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INITDIALOG">
            <summary>
                The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog
                box procedures typically use this message to initialize controls and carry out any other initialization tasks that
                affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_COMMAND">
            <summary>
                The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a
                notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSCOMMAND">
            <summary>
                A window receives this message when the user chooses a command from the Window menu, clicks the maximize button,
                minimize button, restore button, close button, or moves the form. You can stop the form from moving by filtering
                this out.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_TIMER">
            <summary>
                The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted
                by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSCROLL">
            <summary>
                The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll
                bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the
                control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_VSCROLL">
            <summary>
                The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar.
                This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INITMENU">
            <summary>
                The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on
                the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_INITMENUPOPUP">
            <summary>
                The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an
                application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MENUSELECT">
            <summary>
                The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MENUCHAR">
            <summary>
                The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any
                mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ENTERIDLE">
            <summary>
                The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state.
                A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed
                one or more previous messages.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MENURBUTTONUP">
            <summary>
                The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu
                item.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MENUDRAG">
            <summary>
                The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MENUGETOBJECT">
            <summary>
                The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item
                or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_UNINITMENUPOPUP">
            <summary>
                The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MENUCOMMAND">
            <summary>
                The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CHANGEUISTATE">
            <summary>
                An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_UPDATEUISTATE">
            <summary>
                An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window
                and all its child windows.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUERYUISTATE">
            <summary>
                An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLORMSGBOX">
            <summary>
                The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By
                responding to this message, the owner window can set the text and background colors of the message box by using the
                given display device context handle.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLOREDIT">
            <summary>
                An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the
                control is about to be drawn. By responding to this message, the parent window can use the specified device context
                handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLORLISTBOX">
            <summary>
                Sent to the parent window of a list box before the system draws the list box. By responding to this message, the
                parent window can set the text and background colors of the list box by using the specified display device context
                handle.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLORBTN">
            <summary>
                The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window
                can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window
                processing this message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLORDLG">
            <summary>
                The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this
                message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLORSCROLLBAR">
            <summary>
                The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to
                be drawn. By responding to this message, the parent window can use the display context handle to set the background
                color of the scroll bar control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CTLCOLORSTATIC">
            <summary>
                A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its
                parent window when the control is about to be drawn. By responding to this message, the parent window can use the
                specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSEFIRST">
            <summary>
                Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSEMOVE">
            <summary>
                The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is
                posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the
                mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_LBUTTONDOWN">
            <summary>
                The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client
                area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise,
                the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_LBUTTONUP">
            <summary>
                The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client
                area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise,
                the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_LBUTTONDBLCLK">
            <summary>
                The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the
                client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor.
                Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_RBUTTONDOWN">
            <summary>
                The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client
                area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise,
                the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_RBUTTONUP">
            <summary>
                The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client
                area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise,
                the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_RBUTTONDBLCLK">
            <summary>
                The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in
                the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor.
                Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MBUTTONDOWN">
            <summary>
                The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the
                client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor.
                Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MBUTTONUP">
            <summary>
                The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client
                area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise,
                the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MBUTTONDBLCLK">
            <summary>
                The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in
                the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor.
                Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSEWHEEL">
            <summary>
                The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The <c>DefWindowProc</c>
                function
                propagates the message to the window's parent. There should be no internal forwarding of the message, since
                <c>DefWindowProc</c> propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_XBUTTONDOWN">
            <summary>
                The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the
                client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor.
                Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_XBUTTONUP">
            <summary>
                The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the
                client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor.
                Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_XBUTTONDBLCLK">
            <summary>
                The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is
                in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the
                cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSEHWHEEL">
            <summary>
                The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or
                rotated. The <c>DefWindowProc</c> function propagates the message to the window's parent. There should be no
                internal
                forwarding of the message, since <c>DefWindowProc</c> propagates it up the parent chain until it finds a window
                that
                processes it.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSELAST">
            <summary>
                Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PARENTNOTIFY">
            <summary>
                The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed,
                or when the user clicks a mouse button while the cursor is over the child window. When the child window is being
                created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the
                window returns. When the child window is being destroyed, the system sends the message before any processing to
                destroy the window takes place.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ENTERMENULOOP">
            <summary>
                The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been
                entered.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_EXITMENULOOP">
            <summary>
                The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NEXTMENU">
            <summary>
                The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the
                menu bar and the system menu.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SIZING">
            <summary>
                The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can
                monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CAPTURECHANGED">
            <summary>
                The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOVING">
            <summary>
                The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can
                monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_POWERBROADCAST">
            <summary>
                Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DEVICECHANGE">
            <summary>
                Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDICREATE">
            <summary>
                An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI
                child window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIDESTROY">
            <summary>
                An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI
                child window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIACTIVATE">
            <summary>
                An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct
                the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIRESTORE">
            <summary>
                An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an
                MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDINEXT">
            <summary>
                An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the
                next or previous child window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIMAXIMIZE">
            <summary>
                An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an
                MDI child window. The system resizes the child window to make its client area fill the client window. The system
                places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the
                child window's restore icon in the leftmost position. The system also appends the title bar text of the child
                window to that of the frame window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDITILE">
            <summary>
                An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of
                its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDICASCADE">
            <summary>
                An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all
                its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIICONARRANGE">
            <summary>
                An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange
                all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIGETACTIVE">
            <summary>
                An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve
                the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDISETMENU">
            <summary>
                An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the
                entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ENTERSIZEMOVE">
            <summary>
                The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The
                window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when
                the window passes the WM_SYSCOMMAND message to the <c>DefWindowProc</c> function and the <c>wParam</c> parameter of
                the message
                specifies the SC_MOVE or SC_SIZE value. The operation is complete when <c>DefWindowProc</c> returns.
                The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_EXITSIZEMOVE">
            <summary>
                The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The
                window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when
                the window passes the WM_SYSCOMMAND message to the <c>DefWindowProc</c> function and the <c>wParam</c> parameter of
                the message
                specifies the SC_MOVE or SC_SIZE value. The operation is complete when <c>DefWindowProc</c> returns.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DROPFILES">
            <summary>
                Sent when the user drops a file on the window of an application that has registered itself as a recipient of
                dropped files.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MDIREFRESHMENU">
            <summary>
                An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh
                the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_SETCONTEXT">
            <summary>
                Sent to an application when a window is activated. A window receives this message through its <c>WindowProc</c>
                function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_NOTIFY">
            <summary>
                Sent to an application to notify it of changes to the IME window. A window receives this message through its
                <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_CONTROL">
            <summary>
                Sent by an application to direct the IME window to carry out the requested command. The application uses this
                message to control the IME window that it has created. To send this message, the application calls the SendMessage
                function with the following parameters.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_COMPOSITIONFULL">
            <summary>
                Sent to an application when the IME window finds no space to extend the area for the composition window. A window
                receives this message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_SELECT">
            <summary>
                Sent to an application when the operating system is about to change the current IME. A window receives this message
                through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_CHAR">
            <summary>
                Sent to an application when the IME gets a character of the conversion result. A window receives this message
                through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_REQUEST">
            <summary>
                Sent to an application to provide commands and request information. A window receives this message through its
                <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_KEYDOWN">
            <summary>
                Sent to an application by the IME to notify the application of a key press and to keep message order. A window
                receives this message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_IME_KEYUP">
            <summary>
                Sent to an application by the IME to notify the application of a key release and to keep message order. A window
                receives this message through its <c>WindowProc</c> function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSEHOVER">
            <summary>
                The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the
                period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_MOUSELEAVE">
            <summary>
                The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a
                prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCMOUSEHOVER">
            <summary>
                The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the non-client area of the window for
                the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_NCMOUSELEAVE">
            <summary>
                The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the non-client area of the window
                specified
                in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_WTSSESSION_CHANGE">
            <summary>
                The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_TABLET_FIRST">
            <summary>
                The WM_TABLET_FIRST messages notifies applications of change in session state of a tablet.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_TABLET_LAST">
            <summary>
                The WM_TABLET_FIRST messages notifies applications of change in session state of a tablet.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CUT">
            <summary>
                An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if
                any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_COPY">
            <summary>
                An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the
                clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PASTE">
            <summary>
                An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the
                clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data
                in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CLEAR">
            <summary>
                An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if
                any, from the edit control.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_UNDO">
            <summary>
                An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to
                an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_RENDERFORMAT">
            <summary>
                The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format
                and if an application has requested data in that format. The clipboard owner must render data in the specified
                format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_RENDERALLFORMATS">
            <summary>
                The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has
                delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other
                applications, the clipboard owner must render data in all the formats it is capable of generating, and place the
                data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DESTROYCLIPBOARD">
            <summary>
                The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties
                the clipboard.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DRAWCLIPBOARD">
            <summary>
                The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the
                clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PAINTCLIPBOARD">
            <summary>
                The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard
                contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_VSCROLLCLIPBOARD">
            <summary>
                The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard
                contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The
                owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SIZECLIPBOARD">
            <summary>
                The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard
                contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_ASKCBFORMATNAME">
            <summary>
                The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a
                CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CHANGECBCHAIN">
            <summary>
                The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being
                removed from the chain.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSCROLLCLIPBOARD">
            <summary>
                The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the
                clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal
                scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_QUERYNEWPALETTE">
            <summary>
                This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to
                realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PALETTEISCHANGING">
            <summary>
                The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PALETTECHANGED">
            <summary>
                This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus
                realizes its logical palette.
                This message enables windows that do not have the keyboard focus to realize their logical palettes and update their
                client areas.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HOTKEY">
            <summary>
                The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The
                message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PRINT">
            <summary>
                The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most
                commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PRINTCLIENT">
            <summary>
                The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device
                context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_APPCOMMAND">
            <summary>
                The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by
                clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_THEMECHANGED">
            <summary>
                The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change
                events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CLIPBOARDUPDATE">
            <summary>
                Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DWMCOMPOSITIONCHANGED">
            <summary>
                The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop
                composition has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DWMNCRENDERINGCHANGED">
            <summary>
                WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows
                that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DWMCOLORIZATIONCOLORCHANGED">
            <summary>
                Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
                WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register
                for this message as well. You'd have other window go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_GETTITLEBARINFOEX">
            <summary>
                Sent to request extended title bar information. A window receives this message through its <c>WindowProc</c>
                function.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HANDHELDFIRST">
            <summary>
                Functions use this constant for filtering purposes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HANDHELDLAST">
            <summary>
                Functions use this constant for filtering purposes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_AFXFIRST">
            <summary>
                Functions use this constant for filtering purposes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_AFXLAST">
            <summary>
                Functions use this constant for filtering purposes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PENWINFIRST">
            <summary>
                Functions use this constant for filtering purposes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_PENWINLAST">
            <summary>
                Functions use this constant for filtering purposes.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_APP">
            <summary>
                The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X
                is an integer value.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_USER">
            <summary>
                The WM_USER constant is used by applications to help define private messages for use by private window classes,
                usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CPL_LAUNCH">
            <summary>
                An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application
                be started.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_CPL_LAUNCHED">
            <summary>
                The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has
                closed. The WM_CPL_LAUNCHED message is sent to the window identified by the <c>wParam</c> parameter of the
                WM_CPL_LAUNCH
                message that started the application.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_SYSTIMER">
            <summary>
                WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like
                scrolling.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_ACCESSIBILITYSTATE">
            <summary>
                The accessibility state has changed.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_ACTIVATESHELLWINDOW">
            <summary>
                The shell should activate its main window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_APPCOMMAND">
            <summary>
                The user completed an input event (for example, pressed an application command button on the mouse or an
                application command key on the keyboard), and the application did not handle the WM_APPCOMMAND message generated by
                that input.
                If the Shell procedure handles the WM_COMMAND message, it should not call CallNextHookEx. See the Return Value
                section for more information.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_GETMINRECT">
            <summary>
                A window is being minimized or maximized. The system needs the coordinates of the minimized rectangle for the
                window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_LANGUAGE">
            <summary>
                Keyboard language was changed or a new keyboard layout was loaded.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_REDRAW">
            <summary>
                The title of a window in the task bar has been redrawn.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_TASKMAN">
            <summary>
                The user has selected the task list. A shell application that provides a task list should return TRUE to prevent
                Windows from starting its task list.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_WINDOWCREATED">
            <summary>
                A top-level, unowned window has been created. The window exists when the system calls this hook.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_WINDOWDESTROYED">
            <summary>
                A top-level, unowned window is about to be destroyed. The window still exists when the system calls this hook.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_WINDOWACTIVATED">
            <summary>
                The activation has changed to a different top-level, unowned window.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Util.WindowsMessages.WM_HSHELL_WINDOWREPLACED">
            <summary>
                A top-level window is being replaced. The window exists when the system calls this hook.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Damage.Damage">
            <summary>
                Class Damage.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.CalculateDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,Aimtec.DamageType,System.Double)">
            <summary>
                Calculates the damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="damageType">Type of the damage.</param>
            <param name="amount">The amount.</param>
            <returns>System.Double.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">damageType - null</exception>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.CalculateMixedDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,System.Double,System.Double)">
            <summary>
                Calculates the mixed damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="physicalAmount">The physical amount.</param>
            <param name="magicalAmount">The magical amount.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.GetAutoAttackDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base)">
            <summary>
                Gets the automatic attack damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.GetSpellDamage(Aimtec.Obj_AI_Hero,Aimtec.Obj_AI_Base,Aimtec.SpellSlot,Aimtec.SDK.Damage.JSON.DamageStage)">
            <summary>
                Gets the spell damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="spellSlot">The spell slot.</param>
            <param name="stage">The stage.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.CalculateMagicDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,System.Double)">
            <summary>
                Calculates the magic damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="amount">The amount.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.CalculatePhysicalDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,System.Double)">
            <summary>
                Calculates the physical damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="amount">The amount.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.GetDamageReduction(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,System.Double,Aimtec.DamageType)">
            <summary>
                Gets the damage reduction.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="amount">The amount.</param>
            <param name="damageType">Type of the damage.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.GetPassiveDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,System.Double,Aimtec.DamageType)">
            <summary>
                Gets the passive damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="amount">The amount.</param>
            <param name="damageType">Type of the damage.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Damage.Damage.GetPassiveFlatMod(Aimtec.GameObject,Aimtec.Obj_AI_Base)">
            <summary>
                Gets the passive flat mod.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="T:Aimtec.SDK.Damage.DamageLibrary">
            <summary>
                Class DamageLibrary.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.DamageLibrary.Damages">
            <summary>
                Gets the damages.
            </summary>
            <value>The damages.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.DamageLibrary.Logger">
            <summary>
                Gets the logger.
            </summary>
            <value>The logger.</value>
        </member>
        <member name="M:Aimtec.SDK.Damage.DamageLibrary.GetBonusSpellDamage(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,Aimtec.SDK.Damage.JSON.DamageSpellBonus,System.Int32)">
            <summary>
                Gets the bonus spell damage.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="spellBonus">The spell bonus.</param>
            <param name="index">The index.</param>
            <returns>System.Double.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Aimtec.SDK.Damage.DamageLibrary.LoadDamages">
            <summary>
                Loads the damages.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Damage.ItemId">
            <summary>
                Class ItemId.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.ChampionDamage">
            <summary>
                Class ChampionDamage.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.ChampionDamage.E">
            <summary>
                Gets or sets the e.
            </summary>
            <value>The e.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.ChampionDamage.Q">
            <summary>
                Gets or sets the q.
            </summary>
            <value>The q.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.ChampionDamage.R">
            <summary>
                Gets or sets the r.
            </summary>
            <value>The r.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.ChampionDamage.W">
            <summary>
                Gets or sets the w.
            </summary>
            <value>The w.</value>
        </member>
        <member name="M:Aimtec.SDK.Damage.JSON.ChampionDamage.GetSlot(Aimtec.SpellSlot)">
            <summary>
                Gets the slot.
            </summary>
            <param name="slot">The slot.</param>
            <returns>IEnumerable&lt;ChampionDamageSpell&gt;.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">slot - null</exception>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.DamageSpell">
            <summary>
                Class ChampionDamageSpell.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpell.SpellData">
            <summary>
                Gets or sets the spell data.
            </summary>
            <value>The spell data.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpell.Stage">
            <summary>
                Gets or sets the stage.
            </summary>
            <value>The stage.</value>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.DamageSpellBonus">
            <summary>
                Class ChampionDamageSpellBonus.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.BonusDamageOnMinion">
            <summary>
                Gets or sets the bonus damage on minion.
            </summary>
            <value>The bonus damage on minion.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.DamagePercentages">
            <summary>
                Gets or sets the damage percentages.
            </summary>
            <value>The damage percentages.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.DamageType">
            <summary>
                Gets or sets the type of the damage.
            </summary>
            <value>The type of the damage.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.MaxDamageOnMinion">
            <summary>
                Gets or sets the maximum damage on minion.
            </summary>
            <value>The maximum damage on minion.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.MinDamage">
            <summary>
                Gets or sets the minimum damage.
            </summary>
            <value>The minimum damage.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalePer100Ad">
            <summary>
                Gets or sets the scale per100 ad.
            </summary>
            <value>The scale per100 ad.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalePer100Ap">
            <summary>
                Gets or sets the scale per100 ap.
            </summary>
            <value>The scale per100 ap.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalePer100BonusAd">
            <summary>
                Gets or sets the scale per100 bonus ad.
            </summary>
            <value>The scale per100 bonus ad.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalingBuff">
            <summary>
                Gets or sets the scaling buff.
            </summary>
            <value>The scaling buff.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalingBuffOffset">
            <summary>
                Gets or sets the scaling buff offset.
            </summary>
            <value>The scaling buff offset.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalingBuffTarget">
            <summary>
                Gets or sets the scaling buff target.
            </summary>
            <value>The scaling buff target.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalingTarget">
            <summary>
                Gets or sets the scaling target.
            </summary>
            <value>The scaling target.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellBonus.ScalingType">
            <summary>
                Gets or sets the type of the scaling.
            </summary>
            <value>The type of the scaling.</value>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.DamageSpellData">
            <summary>
                The Champion Damage Spell Data class container.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.BonusDamageOnMinion">
            <summary>
                Gets or sets the bonus damage on minion.
            </summary>
            <value>The bonus damage on minion.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.BonusDamages">
            <summary>
                Gets the Bonus Damages.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.Damages">
            <summary>
                Gets the Main Damages.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.DamagesPerLvl">
            <summary>
                Gets or sets the damages per level.
            </summary>
            <value>The damages per level.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.DamageType">
            <summary>
                Gets the Damage Type.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.IsApplyOnHit">
            <summary>
                Gets or sets a value indicating whether this instance is apply on hit.
            </summary>
            <value><c>true</c> if this instance is apply on hit; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.IsModifiedDamage">
            <summary>
                Gets or sets a value indicating whether this instance is modified damage.
            </summary>
            <value><c>true</c> if this instance is modified damage; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.MaxDamageOnMinion">
            <summary>
                Gets or sets the maximum damage on minion.
            </summary>
            <value>The maximum damage on minion.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.ScalePerTargetMissHealth">
            <summary>
                Gets or sets the scale per target missing health.
            </summary>
            <value>The scale per target missing health.</value>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.ScaleSlot">
            <summary>
                Gets the Scaling Slot.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.ScalingBuff">
            <summary>
                Gets the Scaling Buff.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.ScalingBuffOffset">
            <summary>
                Gets the Scaling Buff Offset.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.ScalingBuffTarget">
            <summary>
                Gets the Scaling Buff Target.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Damage.JSON.DamageSpellData.SpellEffectType">
            <summary>
                Gets or sets the type of the spell effect.
            </summary>
            <value>The type of the spell effect.</value>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.DamageScalingTarget">
            <summary>
                Enum DamageScalingTarget
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingTarget.Source">
            <summary>
                The source
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingTarget.Target">
            <summary>
                The target
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.DamageScalingType">
            <summary>
                Enum DamageScalingType
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.BonusAttackPoints">
            <summary>
                The bonus attack points
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.AbilityPoints">
            <summary>
                The ability points
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.AttackPoints">
            <summary>
                The attack points
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.MaxHealth">
            <summary>
                The maximum health
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.CurrentHealth">
            <summary>
                The current health
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.MissingHealth">
            <summary>
                The missing health
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.BonusHealth">
            <summary>
                The bonus health
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.Armor">
            <summary>
                The armor
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageScalingType.MaxMana">
            <summary>
                The maximum mana
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.DamageStage">
            <summary>
                Enum DamageStage
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.Default">
            <summary>
                The default damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.WayBack">
            <summary>
                The way back damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.Detonation">
            <summary>
                The detonation damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.DamagePerSecond">
            <summary>
                The damage per second stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.SecondForm">
            <summary>
                The second form damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.ThirdForm">
            <summary>
                The third form damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.SecondCast">
            <summary>
                The second cast damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.ThirdCast">
            <summary>
                The third cast damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.AgainstMinions">
            <summary>
                The against minions damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.AgainstMonsters">
            <summary>
                The against monsters damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.AgainstTurrets">
            <summary>
                The against turrets damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.Buff">
            <summary>
                The buff damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.AreaOfEffect">
            <summary>
                The AoE damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.Collision">
            <summary>
                The collision damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.Empowered">
            <summary>
                The empowered damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.Effect">
            <summary>
                The effect damage stage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.DamageStage.ReducedDamage">
            <summary>
                The reduced damage stage.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Damage.JSON.SpellEffectType">
            <summary>
                Enum SpellEffectType
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.SpellEffectType.None">
            <summary>
                The none
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.SpellEffectType.AoE">
            <summary>
                The ao e
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.SpellEffectType.Single">
            <summary>
                The single
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.SpellEffectType.OverTime">
            <summary>
                The over time
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Damage.JSON.SpellEffectType.Attack">
            <summary>
                The attack
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Events.GameEvents">
            <summary>
            Class GameEvents.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Events.GameEvents.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Aimtec.SDK.Events.GameEvents"/> class.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Events.GameEvents.GameStartDelegate">
            <summary>
            The GameStart Delegate
            </summary>
        </member>
        <member name="E:Aimtec.SDK.Events.GameEvents.GameStart">
            <summary>
            Occurs when the game is started.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Events.GameEvents.GameStartHandler">
            <summary>
            Handles the <see cref="E:Aimtec.SDK.Events.GameEvents.GameStart"/> event.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Extensions.UnitExtensions">
            <summary>
                Class UnitExtensions.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.Distance(Aimtec.Vector3,Aimtec.Vector3)">
            <summary>
                Returns the 3D distance between two vectors.
            </summary>
            <param name="v1">The start vector.</param>
            <param name="v2">The end vector.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.Distance(Aimtec.Vector2,Aimtec.Vector2)">
            <summary>
                Returns the 2D distance between two vectors.
            </summary>
            <param name="v1">The start vector.</param>
            <param name="v2">The end vector.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.Distance(Aimtec.GameObject,Aimtec.Vector3)">
            <summary>
                Returns the 3D distance between a gameobject and a vector.
            </summary>
            <param name="gameObject">The GameObject.</param>
            <param name="v1">The vector.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.Distance(Aimtec.GameObject,Aimtec.GameObject)">
            <summary>
                Returns the 3D distance between two gameobjects.
            </summary>
            <param name="gameObj">The start GameObject.</param>
            <param name="gameObj1">The target GameObject.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.DistanceSqr(Aimtec.GameObject,Aimtec.GameObject)">
            <summary>
                Returns the 3D distance squared between two gameobjects.
            </summary>
            <param name="gameObj">The start GameObject.</param>
            <param name="gameObj1">The target GameObject.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.GetBuffCount(Aimtec.Obj_AI_Base,System.String)">
            <summary>
                Returns how many stacks of the 'buffname' buff the target possesses.
            </summary>
            <param name="from">The target.</param>
            <param name="buffname">The buffname.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.GetFullAttackRange(Aimtec.Obj_AI_Base,Aimtec.AttackableUnit)">
            <summary>
                Gets the full attack range.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.CountAllyHeroesInRange(Aimtec.GameObject,System.Single)">
            <summary>
                Counts the ally heroes in range.
            </summary>
            <param name="unit">the unit.</param>
            <param name="range">The range.</param>
            <returns>How many ally heroes are inside a 'float' range from the starting 'unit' GameObject.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.CountEnemyHeroesInRange(Aimtec.GameObject,System.Single,Aimtec.Obj_AI_Base)">
            <summary>
                Counts the enemy heroes in range.
            </summary>
            <param name="unit">the unit.</param>
            <param name="range">The range.</param>
            <param name="dontIncludeStartingUnit">The original unit.</param>
            <returns>How many enemy heroes are inside a 'float' range from the starting 'unit' GameObject.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.HasBuff(Aimtec.Obj_AI_Base,System.String)">
            <summary>
                Determines whether the specified target has a determined buff.
            </summary>
            <param name="from">The target.</param>
            <param name="buffname">The buffname.</param>
            <returns>
                <c>true</c> if the specified target has the 'buffname' buff; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.HasBuffOfType(Aimtec.Obj_AI_Base,Aimtec.BuffType)">
            <summary>
                Determines whether the specified unit is affected by a determined bufftype.
            </summary>
            <param name="unit">The unit.</param>
            <param name="buffType">The buff type.</param>
            <returns>
                <c>true</c> if the specified unit is affected by the 'buffType' BuffType; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.HasItem(Aimtec.Obj_AI_Hero,System.UInt32)">
            <summary>
                Determines whether the specified hero target has a determined item.
            </summary>
            <param name="from">The target.</param>
            <param name="itemId">The item's ID.</param>
            <returns>
                <c>true</c> if the specified hero target has the 'itemId' item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.HasItem(Aimtec.Obj_AI_Base,System.UInt32)">
            <summary>
                Determines whether the specified target has a determined item.
            </summary>
            <param name="from">The target.</param>
            <param name="itemId">The item's ID.</param>
            <returns>
                <c>true</c> if the specified target has the 'itemId' item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.HealthPercent(Aimtec.Obj_AI_Base)">
            <summary>
                Returns the current health a determined unit has, in percentual.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.ManaPercent(Aimtec.Obj_AI_Base)">
            <summary>
                Returns the current mana a determined unit has, in percentual.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.ValidActiveBuffs(Aimtec.Obj_AI_Base)">
            <summary>
                Gets the buffs of the unit which are valid and active
            </summary>
            <param name="buff">The unit.</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.GetBuff(Aimtec.Obj_AI_Base,System.String)">
            <summary>
                Returns a determined buff a determined unit has.
            </summary>
            <param name="unit">The unit.</param>
            <param name="buffName">The buff's stringname</param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.IsInRange(Aimtec.Obj_AI_Base,System.Single)">
            <summary>
                Determines whether the specified target is inside a determined range.
            </summary>
            <param name="unit">The target.</param>
            <param name="range">The range.</param>
            <returns>
                <c>true</c> if the specified target is inside the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.IsValidAutoRange(Aimtec.AttackableUnit,Aimtec.Vector3)">
            <summary>
                Determines whether the target is a valid target in the auto attack range from the specified check range from
                vector.
            </summary>
            <param name="target">The target.</param>
            <param name="checkRangeFrom">The check range from.</param>
            <returns><c>true</c> if the target is a valid target in the auto attack range; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.IsValidTarget(Aimtec.AttackableUnit,System.Single,System.Boolean,Aimtec.Vector3)">
            <summary>
                Determines whether the specified target is a valid target.
            </summary>
            <param name="target">The target.</param>
            <param name="range">The range.</param>
            <param name="allyIsValidTarget">if set to <c>true</c> allies will be set as valid targets.</param>
            <param name="checkRangeFrom">The check range from position.</param>
            <returns>
                <c>true</c> if the specified target is a valid target; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.UnitExtensions.IsRecalling(Aimtec.Obj_AI_Hero)">
            <summary>
                Determines whether or not the specified unit is recalling.
            </summary>
            <param name="unit">The unit</param>
            <returns>
                <c>true</c> if the specified unit is recalling; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Aimtec.SDK.Extensions.Vector2Extensions">
            <summary>
            Class Vector2Extensions.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.AngleBetween(Aimtec.Vector2,Aimtec.Vector2,Aimtec.Vector2)">
            <summary>
                Gets the angle between <paramref name="self" />, the center, and two points.
            </summary>
            <param name="self">The self.</param>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.AngleBetween(Aimtec.Vector2,Aimtec.Vector2)">
            <summary>
            Get the angles between the two points.
            </summary>
            <param name="self">The self.</param>
            <param name="v1">The v1.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.AsPoint(Aimtec.Vector2)">
            <summary>
                Converts the Vector2 to a Point
            </summary>
            <param name="pos">The position.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.To3D(Aimtec.Vector2)">
            <summary>
               Converts the Vector2 To a Vector3
            </summary>
            <param name="pos">The position.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.DistanceSquared(Aimtec.Vector2,Aimtec.Vector2,Aimtec.Vector2,System.Boolean)">
            <summary>
                Gets distance squared from the segments.
            </summary>
            <param name="point">The point.</param>
            <param name="segmentStart">The segment start.</param>
            <param name="segmentEnd">The segment end.</param>
            <param name="onlyIfOnSegment">if set to <c>true</c> [only if on segment].</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Intersection(Aimtec.Vector2,Aimtec.Vector2,Aimtec.Vector2,Aimtec.Vector2)">
            <summary>
                Intersects two line segments.
            </summary>
            <param name="lineSegment1Start">Line Segment 1 (Start)</param>
            <param name="lineSegment1End">Line Segment 1 (End)</param>
            <param name="lineSegment2Start">Line Segment 2 (Start)></param>
            <param name="lineSegment2End">Line Segment 2 (End)</param>
            <returns>The intersection result, <seealso cref="T:Aimtec.SDK.Extensions.Vector2Extensions.IntersectionResult" /></returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Perpendicular(Aimtec.Vector2,System.Int32)">
            <summary>
                Creates a new vector perpendicular to <paramref name="vector2" /> and shifted by the specified offset.
            </summary>
            <param name="vector2">The vector2.</param>
            <param name="offset">The offset.</param>
            <returns>Vector2.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Polar(Aimtec.Vector2)">
            <summary>
                Gets the polar angle.
            </summary>
            <param name="v">The v.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Pow(System.Single)">
            <summary>
                Raises <paramref name="x" /> to the second power.
            </summary>
            <param name="x">The x.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.ProjectOn(Aimtec.Vector2,Aimtec.Vector2,Aimtec.Vector2)">
            <summary>
                Returns the projection of the Vector2 on the segment.
            </summary>
            <param name="point">The Point</param>
            <param name="segmentStart">Start of Segment</param>
            <param name="segmentEnd">End of Segment</param>
            <returns><see cref="T:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo" /> containing the projection.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Rotated(Aimtec.Vector2,System.Single)">
            <summary>
                Rotates the Vector2 to a set angle.
            </summary>
            <param name="vector2">Extended Vector2</param>
            <param name="angle">Angle (in radians)</param>
            <returns>Rotated Vector2</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Extend(Aimtec.Vector2,Aimtec.Vector2,System.Single)">
            <summary>
                Extends a Vector2 to another Vector2.
            </summary>
            <param name="vector2">Extended Vector2 (From)</param>
            <param name="toVector2">SharpDX Vector2 (To)</param>
            <param name="distance">Distance (float units)</param>
            <returns>Extended Vector2</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Extend(Aimtec.Vector2,Aimtec.Vector3,System.Single)">
            <summary>
                Extends a Vector2 to a Vector3.
            </summary>
            <param name="vector2">Extended Vector2 (From)</param>
            <param name="toVector3">SharpDX Vector3 (To)</param>
            <param name="distance">Distance (float units)</param>
            <returns>Extended Vector2</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.Normalized(Aimtec.Vector2)">
            <summary>
                Normalizes a Vector2.
            </summary>
            <param name="vector2">SharpDX Vector2</param>
            <returns>Normalized Vector2</returns>
        </member>
        <member name="T:Aimtec.SDK.Extensions.Vector2Extensions.IntersectionResult">
            <summary>
                Struct IntersectionResult
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Extensions.Vector2Extensions.IntersectionResult.Intersects">
            <summary>
                Returns if both of the points intersect.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Extensions.Vector2Extensions.IntersectionResult.Point">
            <summary>
                Intersection point
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.IntersectionResult.#ctor(System.Boolean,Aimtec.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Extensions.Vector2Extensions.IntersectionResult" /> struct.
                Constructor for Intersection Result
            </summary>
            <param name="intersects">
                Intersection of input
            </param>
            <param name="point">
                Intersection Point
            </param>
        </member>
        <member name="T:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo">
            <summary>
                Holds info for the ProjectOn method.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo.IsOnSegment">
            <summary>
                Returns if the point is on the segment
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo.LinePoint">
            <summary>
                Line point
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo.SegmentPoint">
            <summary>
                Segment point
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo.#ctor(System.Boolean,Aimtec.Vector2,Aimtec.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Extensions.Vector2Extensions.ProjectionInfo" /> struct.
            </summary>
            <param name="isOnSegment">
                Is on Segment
            </param>
            <param name="segmentPoint">
                Segment point
            </param>
            <param name="linePoint">
                Line point
            </param>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector3Extensions.Normalized(Aimtec.Vector3)">
            <summary>
            Normalizeds the specified vector.
            </summary>
            <param name="v">The vector.</param>
            <returns>Vector3.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector3Extensions.CountAllyHeroesInRange(Aimtec.Vector3,System.Single)">
            <summary>
                Counts the ally heroes in range.
            </summary>
            <param name="vector3">The vector3.</param>
            <param name="range">The range.</param>
            <returns>How many ally heroes are inside a 'float' range from the starting 'vector3' point.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector3Extensions.CountEnemyHeroesInRange(Aimtec.Vector3,System.Single,Aimtec.Obj_AI_Base)">
            <summary>
                Counts the enemy heroes in range.
            </summary>
            <param name="vector3">The vector3.</param>
            <param name="range">The range.</param>
            <param name="dontIncludeStartingUnit">The starting unit which should not be included in the counting.</param>
            <returns>How many enemy heroes are inside a 'float' range from the starting 'vector3' point.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector3Extensions.Extend(Aimtec.Vector3,Aimtec.Vector3,System.Single)">
            <summary>
                Extends a Vector3 to another Vector3.
            </summary>
            <param name="vector3">the starting position.</param>
            <param name="toVector3">the target direction.</param>
            <param name="distance">the amount of distance.</param>
            <returns>'vector3' extended to 'toVector3' by 'distance'.</returns>
        </member>
        <member name="M:Aimtec.SDK.Extensions.Vector3Extensions.Extend(Aimtec.Vector3,Aimtec.Vector2,System.Single)">
            <summary>
                Extends a Vector3 to a Vector2.
            </summary>
            <param name="vector3">the starting position.</param>
            <param name="toVector2">the target direction.</param>
            <param name="distance">the amount of distance.</param>
            <returns>'vector3' extended to 'toVector2' by 'distance'.</returns>
        </member>
        <member name="T:Aimtec.SDK.Menu.Components.MenuBool">
            <summary>
                Class MenuBool. This class cannot be inherited.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.MenuComponent" />
            <seealso cref="T:System.Boolean" />
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuBool.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Components.MenuBool" /> class.
            </summary>
            <param name="internalName">The display name.</param>
            <param name="displayName">The display name.</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
            <param name="shared">if set to <c>true</c> [shared].</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuBool.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuBool.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>Aimtec.SDK.Menu.Theme.IRenderManager.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuBool.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuBool.UpdateValue(System.Boolean)">
            <summary>
                Updates the value of the bool, saves the new value and fires the value changed event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuBool.LoadValue">
            <summary>
               Loads the value from the file for this component
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Menu.Components.MenuKeyBind">
            <summary>
                Class MenuKeybind. This class cannot be inherited.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.MenuComponent" />
            <seealso cref="T:System.Boolean" />
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuKeyBind.#ctor(System.String,System.String,Aimtec.SDK.Util.KeyCode,Aimtec.SDK.Menu.Components.KeybindType,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Components.MenuKeyBind" /> class.
            </summary>
            <param name="internalName">The internal name.</param>
            <param name="displayName">The display name.</param>
            <param name="key">The key.</param>
            <param name="keybindType">Type of the keybind.</param>
            <param name="active">Whether this item should be active by default</param>
            <param name="shared">Whether this item is shared across instances</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuKeyBind.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuKeyBind.Key">
            <summary>
                Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuKeyBind.KeybindType">
            <summary>
                Gets or sets the type of the keybind.
            </summary>
            <value>The type of the keybind.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuKeyBind.Enabled">
            <summary>
                Gets whether this menu componenet is enabled if applicable
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuKeyBind.KeyIsBeingSet">
            <summary>
            Gets or sets a value indicating whether the key is being set.
            </summary>
            <value><c>true</c> if the key is being set; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuKeyBind.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>Aimtec.SDK.Menu.Theme.IRenderManager.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuKeyBind.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuKeyBind.UpdateValue(System.Boolean)">
            <summary>
                Updates the value of the KeyBind, saves the new value and fires the value changed event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuKeyBind.LoadValue">
            <summary>
               Loads the value from the file for this component
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Menu.Components.KeybindType">
            <summary>
                Enum KeybindType
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Menu.Components.KeybindType.Press">
            <summary>
                Press key bind.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Menu.Components.KeybindType.Toggle">
            <summary>
                Toggle key bind.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Menu.Components.MenuList">
            <summary>
                Class MenuList.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.MenuComponent" />
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuList.#ctor(System.String,System.String,System.String[],System.Int32,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Components.MenuList" /> class.
            </summary>
            <param name="internalName">The Internal Name.</param>
            <param name="displayName">The Displayed Name</param>
            <param name="items">The items.</param>
            <param name="selectedValue">The selected value.</param>
            <exception cref="T:System.ArgumentException">selectedValue</exception>
            <param name="shared">Whether this item is shared across instances</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuList.Value">
            <summary>
                Gets or sets the value, which is the index of the string list.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuList.Items">
            <summary>
                Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuList.SelectedItem">
            <summary>
                Gets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuList.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>Aimtec.SDK.Menu.Theme.IRenderManager.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuList.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuList.UpdateValue(System.Int32)">
            <summary>
                Updates the value of the MenuList, saves the new value and fires the value changed event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuList.LoadValue">
            <summary>
               Loads the value from the file for this component
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Menu.Components.MenuSlider">
            <summary>
                Class MenuSlider. This class cannot be inherited.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.MenuComponent" />
            <seealso cref="T:System.Int32" />
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSlider.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Components.MenuSlider" /> class.
            </summary>
            <param name="internalName">The internal name.</param>
            <param name="displayName">The display name.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="shared">Whether this item is shared across instances</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSlider.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSlider.MaxValue">
            <summary>
                Gets or sets the maximum value.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSlider.MinValue">
            <summary>
                Gets or sets the minimum value.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSlider.MouseDown">
            <summary>
                Gets or sets a value indicating whether [mouse down].
            </summary>
            <value><c>true</c> if [mouse down]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSlider.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>Aimtec.SDK.Menu.Theme.IRenderManager.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSlider.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSlider.SetSliderValue(System.Int32)">
            <summary>
                Sets the slider value.
            </summary>
            <param name="x">The x.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSlider.LoadValue">
            <summary>
               Loads the value from the file for this component
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Menu.Components.MenuSliderBool">
            <summary>
                Class MenuSliderBool. This class cannot be inherited.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.MenuComponent" />
            <seealso cref="T:System.Int32" />
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSliderBool.#ctor(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Components.MenuSliderBool" /> class.
            </summary>
            <param name="internalName">The internal name.</param>
            <param name="displayName">The display name.</param>
            <param name="enabled">Whether this is enabled by default</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="shared">Whether this item is shared across instances</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSliderBool.MaxValue">
            <summary>
                Gets or sets the maximum value.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSliderBool.MinValue">
            <summary>
                Gets or sets the minimum value.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Components.MenuSliderBool.MouseDown">
            <summary>
                Gets or sets a value indicating whether [mouse down].
            </summary>
            <value><c>true</c> if [mouse down]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSliderBool.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSliderBool.SetSliderValue(System.Int32)">
            <summary>
                Sets the slider value.
            </summary>
            <param name="x">The x.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSliderBool.UpdateValue(System.Int32)">
            <summary>
                Updates the value of the slider, saves the new value and fires the value changed event
            </summary>
            <param name="newVal">The new value to set it to.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSliderBool.UpdateEnabled(System.Boolean)">
            <summary>
                Updates the value of the Enabled variable, saves the new value and fires the value changed event
            </summary>
            <param name="newVal">The new value to set it to.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Components.MenuSliderBool.LoadValue">
            <summary>
               Loads the value from the file for this component
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Menu.IReturns`1">
            <summary>
                Exposes a property of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Aimtec.SDK.Menu.IReturns`1.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>
                The value.
            </value>
        </member>
        <member name="T:Aimtec.SDK.Menu.MenuComponent">
            <summary>
                Class MenuComponent.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.IMenuComponent" />
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.RootMenu">
            <summary>
                Gets the Root Menu that this Menu belongs to
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.Dispose">
            <summary>
            Removes this component from its parent menu
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Children">
            <summary>
                Gets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.InternalName">
            <summary>
                Gets or sets the name of the internal.
            </summary>
            <value>The name of the internal.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Enabled">
            <summary>
                Gets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.MenuComponent" /> is enabled.
            </summary>
            <remarks>
               This property will only succeed for MenuBool, MenuKeybind and MenuSliderBool.
            </remarks>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Value">
            <summary>
                Gets a numeric value associated with MenuComponent <see cref="T:Aimtec.SDK.Menu.MenuComponent" />.
            </summary>
            <remarks>
                This property will only succeed for MenuSlider, MenuSliderBool and MenuList.
            </remarks>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Position">
            <summary>
                Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Toggled">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> is toggled.
            </summary>
            <value><c>true</c> if toggled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Visible">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.Root">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.MenuComponent"/> is the root menu.
            </summary>
            <value><c>true</c> if this menu is the root menu; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.MenuComponent.IsMenu">
            <summary>
            Gets a value indicating whether this instance is a menu.
            </summary>
            <value><c>true</c> if this instance is a menu; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.GetItem(System.String)">
            <summary>
                Gets the item.
            </summary>
            <param name="name">The name.</param>
            <returns>MenuComponent.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.As``1">
            <summary>
                Converts the <see cref="T:Aimtec.SDK.Menu.MenuComponent" /> to the specified <typeparamref name="T" />.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.GetBounds(Aimtec.Vector2)">
            <summary>
                Gets the bounds.
            </summary>
            <param name="pos">The position.</param>
            <returns>System.Drawing.Rectangle.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>Aimtec.SDK.Menu.Theme.IRenderManager.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.Render(Aimtec.Vector2)">
            <summary>
                Renders at the specified position.
            </summary>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.MenuComponent.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="T:Aimtec.SDK.Menu.Theme.Default.DefaultMenuList">
            <summary>
                Class DefaultMenuList.
            </summary>
            <seealso
                cref="T:Aimtec.SDK.Menu.Theme.IRenderManager`2" />
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.Default.DefaultMenuList.#ctor(Aimtec.SDK.Menu.Components.MenuList,Aimtec.SDK.Menu.Theme.Default.DefaultMenuTheme)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Theme.Default.DefaultMenuList" /> class.
            </summary>
            <param name="component">The component.</param>
            <param name="theme">The theme.</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Theme.Default.DefaultMenuList.Component">
            <summary>
                Gets the component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Theme.Default.DefaultMenuList.Theme">
            <summary>
                Gets the theme.
            </summary>
            <value>The theme.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.Default.DefaultMenuList.Render(Aimtec.Vector2)">
            <summary>
                Renders at the specified position.
            </summary>
            <param name="pos">The position.</param>
        </member>
        <member name="T:Aimtec.SDK.Menu.Theme.IRenderManager">
            <summary>
                Interface IRenderManager
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.IRenderManager.Render(Aimtec.Vector2)">
            <summary>
                Renders at the specified position.
            </summary>
            <param name="pos">The position.</param>
        </member>
        <member name="T:Aimtec.SDK.Menu.Theme.IRenderManager`1">
            <summary>
                Interface IRenderManager
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:Aimtec.SDK.Menu.Theme.IRenderManager" />
        </member>
        <member name="P:Aimtec.SDK.Menu.Theme.IRenderManager`1.Component">
            <summary>
                Gets the component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="T:Aimtec.SDK.Menu.Theme.IRenderManager`2">
            <summary>
                Interface IRenderManager
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T2">The type of the t2.</typeparam>
            <seealso cref="T:Aimtec.SDK.Menu.Theme.IRenderManager`1" />
        </member>
        <member name="P:Aimtec.SDK.Menu.Theme.IRenderManager`2.Theme">
            <summary>
                Gets the theme.
            </summary>
            <value>The theme.</value>
        </member>
        <member name="T:Aimtec.SDK.Menu.Theme.MenuTheme">
            <summary>
                Class MenuTheme.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Menu.Theme.MenuTheme.MenuHeight">
            <summary>
                Gets the height of the menu.
            </summary>
            <value>The height of the menu.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Theme.MenuTheme.BaseMenuWidth">
            <summary>
                Gets the width of the menu.
            </summary>
            <value>The base width of a Menu</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuBoolRenderer(Aimtec.SDK.Menu.Components.MenuBool)">
            <summary>
                Builds the menu bool renderer.
            </summary>
            <param name="component">The component.</param>
            <returns>IRenderManager&lt;MenuBool&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuKeyBindRenderer(Aimtec.SDK.Menu.Components.MenuKeyBind)">
            <summary>
                Builds the menu keybind renderer.
            </summary>
            <param name="keybind">The keybind.</param>
            <returns>IRenderManager&lt;MenuKeybind&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuList(Aimtec.SDK.Menu.Components.MenuList)">
            <summary>
                Builds the menu list.
            </summary>
            <param name="menuList">The menu list.</param>
            <returns>IRenderManager&lt;MenuList&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuSliderBoolRenderer(Aimtec.SDK.Menu.Components.MenuSliderBool)">
            <summary>
                Builds the menu slider bool renderer.
            </summary>
            <param name="menuList">The menu list.</param>
            <returns>IRenderManager&lt;MenuList&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuRenderer(Aimtec.SDK.Menu.Menu)">
            <summary>
                Builds the menu renderer.
            </summary>
            <param name="menu">The menu.</param>
            <returns>IRenderManager&lt;IMenu&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuSeperatorRenderer(Aimtec.SDK.Menu.Components.MenuSeperator)">
            <summary>
                Builds the menu seperator renderer.
            </summary>
            <param name="menuSeperator">The menu seperator.</param>
            <returns>IRenderManager&lt;MenuSeperator&gt;.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Theme.MenuTheme.BuildMenuSliderRenderer(Aimtec.SDK.Menu.Components.MenuSlider)">
            <summary>
                Builds the menu slider renderer.
            </summary>
            <param name="slider">The slider.</param>
            <returns>IRenderManager&lt;MenuSlider&gt;.</returns>
        </member>
        <member name="T:Aimtec.SDK.Menu.IMenu">
            <summary>
                Interface IMenu
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.IMenuComponent" />
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenu.Children">
            <summary>
                Gets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenu.Add(Aimtec.SDK.Menu.MenuComponent)">
            <summary>
                Adds the specified identifier.
            </summary>
            <param name="menu">The menu.</param>
            <returns>IMenu.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenu.Attach">
            <summary>
                Attaches this instance.
            </summary>
            <returns>IMenu.</returns>
        </member>
        <member name="T:Aimtec.SDK.Menu.IMenuComponent">
            <summary>
                Interface IMenuComponent
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenuComponent.As``1">
            <summary>
                Converts the <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> to the specified <typeparamref name="T" />.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>T.</returns>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.InternalName">
            <summary>
                Gets or sets the name of the internal.
            </summary>
            <value>The name of the internal.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Position">
            <summary>
                Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Enabled">
            <summary>
                Gets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.MenuComponent" /> is enabled.
            </summary>
            <remarks>
                This property will only succeed if the MenuComponent implements <see cref="!:IReturns&lt;bool&gt;" />.
                This property will only succeed for MenuBool, MenuKeyBind and MenuSliderBool" />.
            </remarks>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Value">
            <summary>
                Gets a value associated with this <see cref="T:Aimtec.SDK.Menu.MenuComponent" />
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Root">
            <summary>
                Gets or sets whether this <see cref="T:Aimtec.SDK.Menu.MenuComponent" /> is a a root menu.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Parent">
            <summary>
                Gets the parent of this <see cref="T:Aimtec.SDK.Menu.MenuComponent" /> if it has one.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Shared">
            <summary>
                Gets whether this cref="MenuComponent" /> is shared.
            </summary>
            <value><c>true</c> if shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.IsMenu">
            <summary>
                Gets or sets whether this <see cref="T:Aimtec.SDK.Menu.MenuComponent" /> is a Menu.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Toggled">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> is toggled.
            </summary>
            <value><c>true</c> if toggled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.IMenuComponent.Visible">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenuComponent.GetBounds(Aimtec.Vector2)">
            <summary>
                Gets the bounds.
            </summary>
            <param name="pos">The position.</param>
            <returns>Rectangle.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenuComponent.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>IRenderManager.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenuComponent.Render(Aimtec.Vector2)">
            <summary>
                Renders at the specified position.
            </summary>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.IMenuComponent.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="T:Aimtec.SDK.Menu.Menu">
            <summary>
                Class Menu.
            </summary>
            <seealso cref="T:Aimtec.SDK.Menu.IMenu" />
            <seealso cref="T:System.Collections.IEnumerable" />
        </member>
        <member name="F:Aimtec.SDK.Menu.Menu.toggled">
            <summary>
                The toggled
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Menu.Menu.visible">
            <summary>
                The visible
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.#ctor(System.String,System.String,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Menu.Menu" /> class.
            </summary>
            <param name="internalName">Name of the internal.</param>
            <param name="displayName">The display name.</param>
            <param name="isRoot">Whether this Menu is a root menu</param>
        </member>
        <member name="P:Aimtec.SDK.Menu.Menu.RootMenuKey">
            <summary>
                The internal name of this Menu - adjusted with GUID so it is unique per assembly.
                This is to allow using the same internal name for root menus across different assemblies.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Menu.Menu.Children">
            <summary>
                Gets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Menu.Toggled">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> is toggled.
            </summary>
            <value><c>true</c> if toggled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Menu.Visible">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Menu.IMenuComponent" /> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Menu.Menu.IsMenu">
            <summary>
            Gets a value indicating whether this instance is a menu.
            </summary>
            <value><c>true</c> if this instance is a menu; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.Add(Aimtec.SDK.Menu.MenuComponent)">
            <summary>
                Adds the specified identifier.
            </summary>
            <param name="menuComponent">The menu.</param>
            <returns>IMenu.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.Attach">
            <summary>
                Attaches this instance.
            </summary>
            <returns>IMenu.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.SetShared(System.Boolean)">
            <summary>
            Sets this menu instance to true will make it shared resulting in all its children becoming shared.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.GetRenderManager">
            <summary>
                Gets the render manager.
            </summary>
            <returns>IRenderManager.</returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.Render(Aimtec.Vector2)">
            <summary>
                Renders the specified position.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Aimtec.SDK.Menu.Menu.WndProc(System.UInt32,System.UInt32,System.Int32)">
            <summary>
                An application-defined function that processes messages sent to a window.
            </summary>
            <param name="message">The message.</param>
            <param name="wparam">Additional message information.</param>
            <param name="lparam">Additional message information.</param>
        </member>
        <member name="T:Aimtec.SDK.Menu.ValueChangedArgs">
            <summary>
            The Arguments for ValueChanged Event
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Menu.ValueChangedArgs.InternalName">
            <summary>
            The internal name of the Menu Component that fired this event
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Menu.ValueChangedArgs.#ctor(Aimtec.SDK.Menu.MenuComponent,Aimtec.SDK.Menu.MenuComponent)">
            <summary>
                Creates a new instance of the ValueChangedArgs class
            </summary>
            <param name="oldVal"></param>
            <param name="newVal"></param>
        </member>
        <member name="M:Aimtec.SDK.Menu.ValueChangedArgs.GetPreviousValue``1">
            <summary>
            Gets the previous instance before the Value Changed
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Aimtec.SDK.Menu.ValueChangedArgs.GetNewValue``1">
            <summary>
            Gets the new or current instance after the Value Changed
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Collision.Collision">
            <summary>
                Class Collision.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Collision.Collision.CheckCollision(Aimtec.Obj_AI_Base,Aimtec.Vector3,System.Single,System.Single,System.Single,System.Single,Aimtec.Vector3)">
            <summary>
                Checks the collision.
            </summary>
            <param name="unit">The unit.</param>
            <param name="position">The position.</param>
            <param name="delay">The delay.</param>
            <param name="radius">The radius.</param>
            <param name="range">The range.</param>
            <param name="speed">The speed.</param>
            <param name="from">From.</param>
            <returns><c>true</c> if there are minions that will collide with the projectile, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Collision.Collision.WillCollideWith(Aimtec.Obj_AI_Base,Aimtec.Obj_AI_Base,Aimtec.Vector3,System.Single,System.Single,System.Single,System.Single,Aimtec.Vector3)">
            <summary>
                Checks the collision.
            </summary>
            <param name="unit">The unit.</param>
            <param name="minion">The minion.</param>
            <param name="position">The position.</param>
            <param name="delay">The delay.</param>
            <param name="radius">The radius.</param>
            <param name="range">The range.</param>
            <param name="speed">The speed.</param>
            <param name="from">From.</param>
            <returns><c>true</c> if the projectile will collide with the <paramref name="minion" />, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Collision.CollisionableObjects">
            <summary>
            Enum CollisionableObjects
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Collision.CollisionableObjects.Minions">
            <summary>
                Minion Collision-able Flag
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Collision.CollisionableObjects.Heroes">
            <summary>
                Hero Collision-able Flag
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Collision.CollisionableObjects.YasuoWall">
            <summary>
                Yasuo's Wall Collision-able Flag
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Collision.CollisionableObjects.BraumShield">
            <summary>
                Braum's Shield Collision-able Flag
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Collision.CollisionableObjects.Walls">
            <summary>
                Wall Collision-able Flag
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Health.HealthPrediction">
            <summary>
            Class HealthPrediction.
            </summary>
            <seealso cref="T:Aimtec.SDK.Prediction.Health.IHealthPrediction" />
        </member>
        <member name="P:Aimtec.SDK.Prediction.Health.HealthPrediction.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.Health.HealthPrediction.Implementation">
            <summary>
            Gets or sets the implementation.
            </summary>
            <value>The implementation.</value>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Health.HealthPrediction.GetPrediction(Aimtec.Obj_AI_Base,System.Int32)">
            <summary>
            Gets the predicted health of the target.
            </summary>
            <param name="target">The target.</param>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Health.IHealthPrediction">
            <summary>
            Interface IHealthPrediction
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Health.IHealthPrediction.GetPrediction(Aimtec.Obj_AI_Base,System.Int32)">
            <summary>
            Gets the predicted health of the target.
            </summary>
            <param name="target">The target.</param>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Skillshots.HitChance">
            <summary>
                The chance that the prediction will hit the target.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.Collision">
            <summary>
                There is a collision.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.OutOfRange">
            <summary>
            The out of range
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.Low">
            <summary>
                The target is not moving, hindering prediction.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.Medium">
            <summary>
                The target has a medium chance of being hit.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.High">
            <summary>
                The target has a high chance of being hit.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.Slowed">
            <summary>
                The target is slowed, and/or too close, allowing for an easy hit.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.Immobile">
            <summary>
                The target is immobile, guaranteeing a hit.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.Prediction.Skillshots.HitChance.Dash">
            <summary>
                The target is dashing in a straight line, guaranteeing a hit.
            </summary>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Skillshots.IPrediction">
            <summary>
            Interface IPrediction
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Skillshots.IPrediction.CalculateTargetPosition(Aimtec.Obj_AI_Base,System.Single,System.Single,System.Single,Aimtec.Vector3,Aimtec.SDK.Prediction.Skillshots.SkillType)">
            <summary>
            Calculates the target position.
            </summary>
            <param name="target">The target.</param>
            <param name="delay">The delay.</param>
            <param name="radius">The radius.</param>
            <param name="speed">The speed.</param>
            <param name="from">From.</param>
            <param name="type">The type.</param>
            <returns>PredictedTargetPosition.</returns>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Skillshots.IPrediction.GetPrediction(Aimtec.SDK.Prediction.PredictionInput)">
            <summary>
            Gets the prediction.
            </summary>
            <param name="input">The input.</param>
            <returns>PredictionOutput.</returns>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Skillshots.PredictedTargetPosition">
            <summary>
            Struct PredictedTargetPosition
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Prediction.Skillshots.PredictedTargetPosition.CastPosition">
            <summary>
            Gets or sets the cast position.
            </summary>
            <value>The cast position.</value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.Skillshots.PredictedTargetPosition.UnitPosition">
            <summary>
            Gets or sets the unit position.
            </summary>
            <value>The unit position.</value>
        </member>
        <member name="T:Aimtec.SDK.Prediction.Skillshots.Prediction">
            <summary>
            Class Prediction.
            </summary>
            <seealso cref="T:Aimtec.SDK.Prediction.Skillshots.IPrediction" />
        </member>
        <member name="P:Aimtec.SDK.Prediction.Skillshots.Prediction.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.Skillshots.Prediction.Implementation">
            <summary>
            Gets or sets the implementation.
            </summary>
            <value>The implementation.</value>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Skillshots.Prediction.ResetImplementation">
            <summary>
            Resets the implementation.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Skillshots.Prediction.CalculateTargetPosition(Aimtec.Obj_AI_Base,System.Single,System.Single,System.Single,Aimtec.Vector3,Aimtec.SDK.Prediction.Skillshots.SkillType)">
            <summary>
            Calculates the target position.
            </summary>
            <param name="target">The target.</param>
            <param name="delay">The delay.</param>
            <param name="radius">The radius.</param>
            <param name="speed">The speed.</param>
            <param name="from">From.</param>
            <param name="type">The type.</param>
            <returns>PredictedTargetPosition.</returns>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Skillshots.Prediction.GetPrediction(Aimtec.SDK.Prediction.PredictionInput)">
            <summary>
            Gets the prediction.
            </summary>
            <param name="input">The input.</param>
            <returns>PredictionOutput.</returns>
        </member>
        <member name="M:Aimtec.SDK.Prediction.Skillshots.PredictionImpl.GetCircularAoeCastPosition(Aimtec.Obj_AI_Base,System.Single,System.Single,System.Single,System.Single,Aimtec.Vector3,System.Boolean)">
            <summary>
            Gets the circular aoe cast position.
            </summary>
            <param name="unit">The unit.</param>
            <param name="delay">The delay.</param>
            <param name="radius">The radius.</param>
            <param name="range">The range.</param>
            <param name="speed">The speed.</param>
            <param name="from">From.</param>
            <param name="collision">if set to <c>true</c> the spell has collision.</param>
            <returns>PredictionOutput.</returns>
        </member>
        <member name="T:Aimtec.SDK.Prediction.PredictionInput">
            <summary>
                The input parameters to calculate skillshot prediction.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Prediction.PredictionInput.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Prediction.PredictionInput" /> class.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.Unit">
            <summary>
            Gets or sets the unit.
            </summary>
            <value>The unit.</value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.From">
            <summary>
                Gets or sets from.
            </summary>
            <value>
                From.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.RangeCheckFrom">
            <summary>
                Gets or sets the the position to check the range from.
            </summary>
            <value>
                The position to check the range from.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.CollisionObjects">
            <summary>
                Gets or sets the collision types.
            </summary>
            <value>
                The collision types.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.Delay">
            <summary>
                Gets or sets the spell delay.
            </summary>
            <value>
                The spell delay.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.Radius">
            <summary>
                Gets or sets the spell width.
            </summary>
            <value>
                The width.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.Range">
            <summary>
                Gets or sets the spell range.
            </summary>
            <value>
                The range.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.Speed">
            <summary>
                Gets or sets the spell speed.
            </summary>
            <value>
                The speed.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.SkillType">
            <summary>
                Gets or sets the cast type of the skill.
            </summary>
            <value>
                The cast type of the skill.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.Target">
            <summary>
                Gets or sets the target.
            </summary>
            <value>
                The target.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionInput.AoE">
            <summary>
            Gets or sets a value indicating whether the spell is an area effect spell.
            </summary>
            <value><c>true</c> if the spell is an area effect spell; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Aimtec.SDK.Prediction.PredictionOutput">
            <summary>
            Class PredictionOutput.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.Input">
            <summary>
                Gets or sets the prediction input.
            </summary>
            <value>
                The prediction input.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.Collisions">
            <summary>
                Gets or sets the collisions.
            </summary>
            <value>
                The collisions.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.HitChance">
            <summary>
                Gets or sets the hit chance.
            </summary>
            <value>
                The hit chance.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.CastPosition">
            <summary>
                Gets or sets the cast position.
            </summary>
            <value>
                The cast position.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.PredictedPosition">
            <summary>
                Gets or sets the target's predicted position.
            </summary>
            <value>
                The target's predicted position.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.Collision">
            <summary>
                Gets a value indicating whether the <see cref="P:Aimtec.SDK.Prediction.PredictionOutput.CastPosition" /> will collide with another GameObject.
            </summary>
            <value>
                <c>true</c> if the <see cref="P:Aimtec.SDK.Prediction.PredictionOutput.CastPosition" /> will collide with another GameObject; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Aimtec.SDK.Prediction.PredictionOutput.AoeTargetsHit">
            <summary>
            Gets or sets the number of targets hit by the area of effect spell.
            </summary>
            <value>The number of targets hit by the area of effect spell.</value>
        </member>
        <member name="T:Aimtec.SDK.Spell">
            <summary>
                Class Spell.
            </summary>
        </member>
        <member name="M:Aimtec.SDK.Spell.#ctor(Aimtec.SpellSlot)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Spell" /> class.
            </summary>
            <param name="slot">The slot.</param>
        </member>
        <member name="M:Aimtec.SDK.Spell.#ctor(Aimtec.SpellSlot,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.Spell" /> class.
            </summary>
            <param name="slot">The slot.</param>
            <param name="range">The range.</param>
        </member>
        <member name="P:Aimtec.SDK.Spell.ChargedBuffName">
            <summary>
                Gets or sets the name of the charged buff.
            </summary>
            <value>The name of the charged buff.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.ChargedMaxRange">
            <summary>
                Gets or sets the charged maximum range.
            </summary>
            <value>The charged maximum range.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.ChargedMinRange">
            <summary>
                Gets or sets the charged minimum range.
            </summary>
            <value>The charged minimum range.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.ChargedSpellName">
            <summary>
                Gets or sets the name of the charged spell.
            </summary>
            <value>The name of the charged spell.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.ChargeDuration">
            <summary>
                Gets or sets the duration of the charge.
            </summary>
            <value>The duration of the charge.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Collision">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:Aimtec.SDK.Spell" /> has collision.
            </summary>
            <value><c>true</c> if the spell has collision; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Delay">
            <summary>
                Gets or sets the delay.
            </summary>
            <value>The delay.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.HitChance">
            <summary>
                Gets or sets the hit chance.
            </summary>
            <value>The hit chance.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.IsChargedSpell">
            <summary>
                Gets or sets a value indicating whether this instance is charged spell.
            </summary>
            <value><c>true</c> if this instance is charged spell; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.IsCharging">
            <summary>
                Gets a value indicating whether this instance is charing.
            </summary>
            <value><c>true</c> if this instance is charing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.IsSkillShot">
            <summary>
                Gets or sets a value indicating whether this instance is skill shot.
            </summary>
            <value><c>true</c> if this instance is skill shot; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Range">
            <summary>
                Gets or sets the range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Ready">
            <summary>
                Gets a value indicating whether this <see cref="T:Aimtec.SDK.Spell" /> is ready.
            </summary>
            <value><c>true</c> if ready; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Slot">
            <summary>
                Gets or sets the slot.
            </summary>
            <value>The slot.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Speed">
            <summary>
                Gets or sets the speed.
            </summary>
            <value>The speed.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Type">
            <summary>
                Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Width">
            <summary>
                Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Logger">
            <summary>
                Gets the logger.
            </summary>
            <value>The logger.</value>
        </member>
        <member name="P:Aimtec.SDK.Spell.Player">
            <summary>
                Gets the player.
            </summary>
            <value>The player.</value>
        </member>
        <member name="M:Aimtec.SDK.Spell.Cast(Aimtec.Obj_AI_Base)">
            <summary>
                Casts the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns><c>true</c> if the spell was casted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.Cast">
            <summary>
                Casts this instance.
            </summary>
            <returns><c>true</c> if the spell was casted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.Cast(Aimtec.Vector2)">
            <summary>
                Casts the specified position.
            </summary>
            <param name="position">The position.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.Cast(Aimtec.Vector3)">
            <summary>
                Casts the specified position.
            </summary>
            <param name="position">The position.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.CastOnUnit(Aimtec.GameObject)">
            <summary>
                Casts the on unit.
            </summary>
            <param name="obj">The object.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.GetPrediction(Aimtec.Obj_AI_Base)">
            <summary>
                Gets the prediction.
            </summary>
            <param name="target">The target.</param>
            <returns>PredictionOutput.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.GetPredictionInput(Aimtec.Obj_AI_Base)">
            <summary>
                Gets the prediction input.
            </summary>
            <param name="target">The target.</param>
            <returns>PredictionInput.</returns>
        </member>
        <member name="M:Aimtec.SDK.Spell.SetCharged(System.String,System.String,System.Int32,System.Int32,System.Single)">
            <summary>
                Sets the charged.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="buffName">Name of the buff.</param>
            <param name="minRange">The minimum range.</param>
            <param name="maxRange">The maximum range.</param>
            <param name="chargeDurationSeconds">The charge duration in seconds.</param>
        </member>
        <member name="M:Aimtec.SDK.Spell.SetSkillshot(System.Single,System.Single,System.Single,System.Boolean,Aimtec.SDK.Prediction.Skillshots.SkillType,Aimtec.SDK.Prediction.Skillshots.HitChance)">
            <summary>
                Sets the skillshot.
            </summary>
            <param name="delay">The delay.</param>
            <param name="width">The width.</param>
            <param name="speed">The speed.</param>
            <param name="collision">if set to <c>true</c> the spell has collision.</param>
            <param name="type">The type.</param>
            <param name="hitchance">The hitchance.</param>
        </member>
        <member name="T:Aimtec.SDK.TargetSelector.ITargetSelector">
            <summary>
            The base class for target selector.
            </summary>
        </member>
        <member name="P:Aimtec.SDK.TargetSelector.ITargetSelector.Config">
            <summary>
                Gets or sets the Target Selector Menu
            </summary>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.ITargetSelector.GetTarget(System.Single)">
            <summary>
            Gets the target.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.ITargetSelector.GetOrderedTargets(System.Single)">
            <summary>
            Gets the target.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.ITargetSelector.GetOrbwalkingTarget">
            <summary>
            Gets the target for the Orbwalker to attack
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aimtec.SDK.TargetSelector.TargetSelector">
            <summary>
                Target Selector Class
            </summary>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.TargetSelector.#ctor(Aimtec.SDK.TargetSelector.ITargetSelector)">
            <summary>
                Initializes a new instance of the <see cref="T:Aimtec.SDK.TargetSelector.TargetSelector" /> class.
            </summary>
            <param name="impl">The implementation.</param>
        </member>
        <member name="P:Aimtec.SDK.TargetSelector.TargetSelector.Implementation">
            <summary>
                Gets or sets the implementation of the target selector.
            </summary>
            <value>
                The implementation of the target selector.
            </value>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.TargetSelector.GetTarget(System.Single)">
            <summary>
                Gets the target.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.TargetSelector.GetOrbwalkingTarget">
            <summary>
                Gets the best target within Auto Attack Range
            </summary>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.TargetSelector.GetOrderedTargets(System.Single)">
            <summary>
                Gets an ordered enumerable of the available targets within the range based on their priority ranking by the Target Selector
            </summary>
        </member>
        <member name="M:Aimtec.SDK.TargetSelector.TargetSelector.Dispose">
            <summary>
                Disposes the current instance
            </summary>
        </member>
        <member name="F:Aimtec.SDK.TargetSelector.TargetSelectorMode.EasiestToKill">
            <summary>
            Sorts target by how easy they are to kill with spells.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.TargetSelector.TargetSelectorMode.Closest">
            <summary>
            Gets the target closest to the player.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.TargetSelector.TargetSelectorMode.NearMouse">
            <summary>
            Gets the target nearest to the mouse.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.TargetSelector.TargetSelectorMode.MostAp">
            <summary>
            Gets the target with the most ability power.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.TargetSelector.TargetSelectorMode.MostAd">
            <summary>
             Gets the target with the most attack damage.
            </summary>
        </member>
        <member name="F:Aimtec.SDK.TargetSelector.TargetSelectorMode.LowestHealth">
            <summary>
            Gets the target with the least health.
            </summary>
        </member>
    </members>
</doc>
